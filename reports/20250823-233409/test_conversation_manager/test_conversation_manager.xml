<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="24" failures="0" skipped="0" tests="24" time="4.948" timestamp="2025-08-23T23:34:57.200471+02:00" hostname="Cezarys-MacBook-Pro.local"><testcase classname="test_conversation_manager.TestConversationStateManagement" name="test_conversation_state_creation" time="0.001"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestConversationStateManagement" name="test_conversation_state_serialization" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestConversationStateManagement" name="test_conversation_state_deserialization" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestInitialization" name="test_successful_redis_initialization" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestInitialization" name="test_redis_failure_fallback" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestCachingStrategy" name="test_redis_cache_hit" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestCachingStrategy" name="test_redis_cache_miss" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestCachingStrategy" name="test_memory_cache_fallback" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestCachingStrategy" name="test_save_to_redis_cache" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestCachingStrategy" name="test_save_to_memory_cache" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestDatabasePersistence" name="test_get_from_database" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestDatabasePersistence" name="test_save_conversation_history" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestDatabasePersistence" name="test_get_conversation_history" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestConversationContext" name="test_conversation_context_new" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestConversationContext" name="test_conversation_context_existing" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestCaseLinking" name="test_link_to_case" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestHealthCheck" name="test_healthy_state" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestHealthCheck" name="test_redis_disconnected" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestHealthCheck" name="test_database_unhealthy" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestConcurrentAccess" name="test_concurrent_cache_updates" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestConcurrentAccess" name="test_memory_cache_thread_safety" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestEdgeCases" name="test_cache_ttl_expiration" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestEdgeCases" name="test_invalid_json_in_cache" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_conversation_manager.TestEdgeCases" name="test_get_or_create_with_metadata" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase></testsuite></testsuites>