<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="24" failures="0" skipped="0" tests="24" time="4.566" timestamp="2025-08-23T23:35:38.677206+02:00" hostname="Cezarys-MacBook-Pro.local"><testcase classname="test_tool_executor.TestCircuitBreaker" name="test_circuit_breaker_initial_state" time="0.001"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestCircuitBreaker" name="test_circuit_breaker_open_after_failures" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestCircuitBreaker" name="test_circuit_breaker_recovery_timeout" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestCircuitBreaker" name="test_circuit_breaker_recovery_success" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestCircuitBreaker" name="test_circuit_breaker_reopen_on_half_open_failure" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestCircuitBreaker" name="test_circuit_breaker_metrics" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestRetryConfig" name="test_exponential_backoff" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestRetryConfig" name="test_jitter_addition" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestToolExecutorInitialization" name="test_initialization" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestToolExecution" name="test_successful_execution" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestToolExecution" name="test_circuit_open_error" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestToolExecution" name="test_retry_on_failure" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestToolExecution" name="test_no_retry_on_validation_error" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestToolExecution" name="test_retry_exhaustion" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestMiddleware" name="test_middleware_execution_order" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestMiddleware" name="test_logging_middleware" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestMiddleware" name="test_validation_middleware" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestMetrics" name="test_individual_tool_metrics" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestMetrics" name="test_aggregate_metrics" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestHealthCheck" name="test_healthy_state" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestHealthCheck" name="test_degraded_state" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestHealthCheck" name="test_unhealthy_state" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestManualOperations" name="test_manual_circuit_reset" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_executor.TestManualOperations" name="test_configure_circuit_breaker" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase></testsuite></testsuites>