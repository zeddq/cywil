<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="22" failures="0" skipped="0" tests="22" time="4.582" timestamp="2025-08-23T23:35:44.493955+02:00" hostname="Cezarys-MacBook-Pro.local"><testcase classname="test_tool_registry.TestToolParameter" name="test_tool_parameter_creation" time="0.001"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolParameter" name="test_tool_parameter_to_openai_schema" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolDefinition" name="test_tool_definition_creation" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolDefinition" name="test_tool_definition_to_openai_schema" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolDefinition" name="test_create_pydantic_model" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolRegistry" name="test_registry_initialization" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolRegistry" name="test_register_tool_function" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolRegistry" name="test_register_tool_decorator" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolRegistry" name="test_register_duplicate_tool" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolRegistry" name="test_get_tool" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolRegistry" name="test_list_tools" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolRegistry" name="test_list_tools_by_category" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolRegistry" name="test_get_schemas" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolExecution" name="test_execute_tool_success" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolExecution" name="test_execute_tool_not_found" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolExecution" name="test_execute_tool_validation" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolExecution" name="test_execute_tool_with_defaults" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolExecution" name="test_execute_tool_error_handling" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestToolExecution" name="test_execute_sync_tool" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestGlobalRegistry" name="test_global_registry_singleton" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestGlobalRegistry" name="test_global_registry_usage" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_tool_registry.TestParameterTypeConversion" name="test_type_conversion" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase></testsuite></testsuites>