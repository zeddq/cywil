{"created": 1755984949.0761752, "duration": 4.582218170166016, "exitcode": 1, "root": "/Volumes/code/cywil/ai-paralegal-poc/tests", "environment": {}, "summary": {"error": 22, "total": 22, "collected": 22}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "test_tool_registry.py", "type": "Module"}]}, {"nodeid": "test_tool_registry.py::TestToolParameter", "outcome": "passed", "result": [{"nodeid": "test_tool_registry.py::TestToolParameter::test_tool_parameter_creation", "type": "Function", "lineno": 24}, {"nodeid": "test_tool_registry.py::TestToolParameter::test_tool_parameter_to_openai_schema", "type": "Function", "lineno": 42}]}, {"nodeid": "test_tool_registry.py::TestToolDefinition", "outcome": "passed", "result": [{"nodeid": "test_tool_registry.py::TestToolDefinition::test_tool_definition_creation", "type": "Function", "lineno": 80}, {"nodeid": "test_tool_registry.py::TestToolDefinition::test_tool_definition_to_openai_schema", "type": "Function", "lineno": 105}, {"nodeid": "test_tool_registry.py::TestToolDefinition::test_create_pydantic_model", "type": "Function", "lineno": 143}]}, {"nodeid": "test_tool_registry.py::TestToolRegistry", "outcome": "passed", "result": [{"nodeid": "test_tool_registry.py::TestToolRegistry::test_registry_initialization", "type": "Function", "lineno": 177}, {"nodeid": "test_tool_registry.py::TestToolRegistry::test_register_tool_function", "type": "Function", "lineno": 182}, {"nodeid": "test_tool_registry.py::TestToolRegistry::test_register_tool_decorator", "type": "Function", "lineno": 205}, {"nodeid": "test_tool_registry.py::TestToolRegistry::test_register_duplicate_tool", "type": "Function", "lineno": 223}, {"nodeid": "test_tool_registry.py::TestToolRegistry::test_get_tool", "type": "Function", "lineno": 236}, {"nodeid": "test_tool_registry.py::TestToolRegistry::test_list_tools", "type": "Function", "lineno": 251}, {"nodeid": "test_tool_registry.py::TestToolRegistry::test_list_tools_by_category", "type": "Function", "lineno": 267}, {"nodeid": "test_tool_registry.py::TestToolRegistry::test_get_schemas", "type": "Function", "lineno": 283}]}, {"nodeid": "test_tool_registry.py::TestToolExecution", "outcome": "passed", "result": [{"nodeid": "test_tool_registry.py::TestToolExecution::test_execute_tool_success", "type": "Coroutine", "lineno": 306}, {"nodeid": "test_tool_registry.py::TestToolExecution::test_execute_tool_not_found", "type": "Coroutine", "lineno": 322}, {"nodeid": "test_tool_registry.py::TestToolExecution::test_execute_tool_validation", "type": "Coroutine", "lineno": 328}, {"nodeid": "test_tool_registry.py::TestToolExecution::test_execute_tool_with_defaults", "type": "Coroutine", "lineno": 348}, {"nodeid": "test_tool_registry.py::TestToolExecution::test_execute_tool_error_handling", "type": "Coroutine", "lineno": 369}, {"nodeid": "test_tool_registry.py::TestToolExecution::test_execute_sync_tool", "type": "Coroutine", "lineno": 380}]}, {"nodeid": "test_tool_registry.py::TestGlobalRegistry", "outcome": "passed", "result": [{"nodeid": "test_tool_registry.py::TestGlobalRegistry::test_global_registry_singleton", "type": "Function", "lineno": 396}, {"nodeid": "test_tool_registry.py::TestGlobalRegistry::test_global_registry_usage", "type": "Coroutine", "lineno": 403}]}, {"nodeid": "test_tool_registry.py::TestParameterTypeConversion", "outcome": "passed", "result": [{"nodeid": "test_tool_registry.py::TestParameterTypeConversion::test_type_conversion", "type": "Coroutine", "lineno": 431}]}, {"nodeid": "test_tool_registry.py", "outcome": "passed", "result": [{"nodeid": "test_tool_registry.py::TestToolParameter", "type": "Class"}, {"nodeid": "test_tool_registry.py::TestToolDefinition", "type": "Class"}, {"nodeid": "test_tool_registry.py::TestToolRegistry", "type": "Class"}, {"nodeid": "test_tool_registry.py::TestToolExecution", "type": "Class"}, {"nodeid": "test_tool_registry.py::TestGlobalRegistry", "type": "Class"}, {"nodeid": "test_tool_registry.py::TestParameterTypeConversion", "type": "Class"}]}], "tests": [{"nodeid": "test_tool_registry.py::TestToolParameter::test_tool_parameter_creation", "lineno": 24, "outcome": "error", "keywords": ["test_tool_parameter_creation", "TestToolParameter", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.0006067499925848097, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 0.0001912500010803342, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolParameter::test_tool_parameter_to_openai_schema", "lineno": 42, "outcome": "error", "keywords": ["test_tool_parameter_to_openai_schema", "TestToolParameter", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00021420899429358542, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 0.00014004099648445845, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolDefinition::test_tool_definition_creation", "lineno": 80, "outcome": "error", "keywords": ["test_tool_definition_creation", "TestToolDefinition", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00022408401127904654, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 0.000116915995022282, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolDefinition::test_tool_definition_to_openai_schema", "lineno": 105, "outcome": "error", "keywords": ["test_tool_definition_to_openai_schema", "TestToolDefinition", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00022299998090602458, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 0.00011679198360070586, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolDefinition::test_create_pydantic_model", "lineno": 143, "outcome": "error", "keywords": ["test_create_pydantic_model", "TestToolDefinition", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00019341701408848166, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 0.000110041000880301, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolRegistry::test_registry_initialization", "lineno": 177, "outcome": "error", "keywords": ["test_registry_initialization", "TestToolRegistry", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00019391599926166236, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 9.804201545193791e-05, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolRegistry::test_register_tool_function", "lineno": 182, "outcome": "error", "keywords": ["test_register_tool_function", "TestToolRegistry", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00018862501019611955, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 9.462499292567372e-05, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolRegistry::test_register_tool_decorator", "lineno": 205, "outcome": "error", "keywords": ["test_register_tool_decorator", "TestToolRegistry", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.0002552499936427921, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 0.00013404199853539467, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolRegistry::test_register_duplicate_tool", "lineno": 223, "outcome": "error", "keywords": ["test_register_duplicate_tool", "TestToolRegistry", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00021962501341477036, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 0.00013287502224557102, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolRegistry::test_get_tool", "lineno": 236, "outcome": "error", "keywords": ["test_get_tool", "TestToolRegistry", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00022295801318250597, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 0.00011062499834224582, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolRegistry::test_list_tools", "lineno": 251, "outcome": "error", "keywords": ["test_list_tools", "TestToolRegistry", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.0001974170154426247, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 9.537499863654375e-05, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolRegistry::test_list_tools_by_category", "lineno": 267, "outcome": "error", "keywords": ["test_list_tools_by_category", "TestToolRegistry", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.0001907499972730875, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 9.087499347515404e-05, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolRegistry::test_get_schemas", "lineno": 283, "outcome": "error", "keywords": ["test_get_schemas", "TestToolRegistry", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00018858298426494002, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 0.00010891698184423149, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolExecution::test_execute_tool_success", "lineno": 306, "outcome": "error", "keywords": ["test_execute_tool_success", "asyncio", "pytestmark", "TestToolExecution", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00021054199896752834, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 9.904199396260083e-05, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolExecution::test_execute_tool_not_found", "lineno": 322, "outcome": "error", "keywords": ["test_execute_tool_not_found", "asyncio", "pytestmark", "TestToolExecution", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00021508400095626712, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 0.0001257499970961362, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolExecution::test_execute_tool_validation", "lineno": 328, "outcome": "error", "keywords": ["test_execute_tool_validation", "asyncio", "pytestmark", "TestToolExecution", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00021995900897309184, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 0.00010549998842179775, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolExecution::test_execute_tool_with_defaults", "lineno": 348, "outcome": "error", "keywords": ["test_execute_tool_with_defaults", "asyncio", "pytestmark", "TestToolExecution", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.000200542010134086, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 0.00011787499533966184, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolExecution::test_execute_tool_error_handling", "lineno": 369, "outcome": "error", "keywords": ["test_execute_tool_error_handling", "asyncio", "pytestmark", "TestToolExecution", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00020329200197011232, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 0.0001010000123642385, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestToolExecution::test_execute_sync_tool", "lineno": 380, "outcome": "error", "keywords": ["test_execute_sync_tool", "asyncio", "pytestmark", "TestToolExecution", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00019199997768737376, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 9.929199586622417e-05, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestGlobalRegistry::test_global_registry_singleton", "lineno": 396, "outcome": "error", "keywords": ["test_global_registry_singleton", "TestGlobalRegistry", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00018733300385065377, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 0.00010304199531674385, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestGlobalRegistry::test_global_registry_usage", "lineno": 403, "outcome": "error", "keywords": ["test_global_registry_usage", "asyncio", "pytestmark", "TestGlobalRegistry", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00019916699966415763, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 9.883299935609102e-05, "outcome": "passed"}}, {"nodeid": "test_tool_registry.py::TestParameterTypeConversion::test_type_conversion", "lineno": 431, "outcome": "error", "keywords": ["test_type_conversion", "asyncio", "pytestmark", "TestParameterTypeConversion", "test_tool_registry.py", "tests", ""], "setup": {"duration": 0.00022074999287724495, "outcome": "failed", "crash": {"path": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError: No module named 'app.core.service_container'"}, "traceback": [{"path": "tests/conftest.py", "lineno": 26, "message": "ModuleNotFoundError"}], "longrepr": "@pytest.fixture(autouse=True)\n    def reset_singletons():\n        \"\"\"Reset singleton instances between tests\"\"\"\n        # Reset service container\n>       from app.core.service_container import service_container\nE       ModuleNotFoundError: No module named 'app.core.service_container'\n\ntests/conftest.py:26: ModuleNotFoundError"}, "teardown": {"duration": 0.00020187499467283487, "outcome": "passed"}}], "warnings": [{"message": "Unknown config option: timeout\n", "category": "PytestConfigWarning", "when": "config", "filename": "/Volumes/code/cywil/ai-paralegal-poc/.venv/lib/python3.11/site-packages/_pytest/config/__init__.py", "lineno": 1474}]}