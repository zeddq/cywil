<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="16" failures="0" skipped="0" tests="16" time="4.630" timestamp="2025-08-23T23:35:03.441405+02:00" hostname="Cezarys-MacBook-Pro.local"><testcase classname="test_database_manager.TestDatabaseManagerInitialization" name="test_successful_initialization" time="0.001"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_database_manager.TestDatabaseManagerInitialization" name="test_initialization_failure" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_database_manager.TestDatabaseManagerInitialization" name="test_double_initialization" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_database_manager.TestConnectionPooling" name="test_pool_configuration" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_database_manager.TestConnectionPooling" name="test_pool_exhaustion" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_database_manager.TestTransactionManagement" name="test_successful_transaction" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_database_manager.TestTransactionManagement" name="test_transaction_rollback_on_exception" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_database_manager.TestTransactionManagement" name="test_explicit_transaction_context" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_database_manager.TestUnitOfWork" name="test_unit_of_work_commit" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_database_manager.TestUnitOfWork" name="test_unit_of_work_rollback" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_database_manager.TestUnitOfWork" name="test_unit_of_work_manual_commit" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_database_manager.TestUnitOfWork" name="test_unit_of_work_double_commit_error" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_database_manager.TestHealthCheck" name="test_healthy_database" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_database_manager.TestHealthCheck" name="test_unhealthy_database" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_database_manager.TestConcurrentAccess" name="test_concurrent_sessions" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase><testcase classname="test_database_manager.TestShutdown" name="test_engine_disposal" time="0.000"><error message="failed on setup with &quot;ModuleNotFoundError: No module named 'app.core.service_container'&quot;">@pytest.fixture(autouse=True)
    def reset_singletons():
        """Reset singleton instances between tests"""
        # Reset service container
&gt;       from app.core.service_container import service_container
E       ModuleNotFoundError: No module named 'app.core.service_container'

tests/conftest.py:26: ModuleNotFoundError</error></testcase></testsuite></testsuites>