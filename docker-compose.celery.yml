version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ai_paralegal
      POSTGRES_USER: paralegal
      POSTGRES_PASSWORD: paralegal_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U paralegal"]
      interval: 5s
      timeout: 3s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6334

  # Main application
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://paralegal:paralegal_password@postgres:5432/ai_paralegal
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - USE_CELERY=true
      - LOG_LEVEL=INFO
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_started
    command: uvicorn app.main_celery:app --host 0.0.0.0 --port 8000 --reload

  # Celery worker for default queue
  celery-worker-default:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://paralegal:paralegal_password@postgres:5432/ai_paralegal
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_started
    command: celery -A app.worker.celery_app worker --loglevel=info --concurrency=2 --queues=default,high_priority --hostname=default@%h

  # Celery worker for ingestion
  celery-worker-ingestion:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://paralegal:paralegal_password@postgres:5432/ai_paralegal
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_started
    command: celery -A app.worker.celery_app worker --loglevel=info --concurrency=1 --queues=ingestion --hostname=ingestion@%h --max-tasks-per-child=1

  # Celery worker for embeddings
  celery-worker-embeddings:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://paralegal:paralegal_password@postgres:5432/ai_paralegal
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_started
    command: celery -A app.worker.celery_app worker --loglevel=info --concurrency=1 --queues=embeddings --hostname=embeddings@%h

  # Celery worker for search
  celery-worker-search:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://paralegal:paralegal_password@postgres:5432/ai_paralegal
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_started
    command: celery -A app.worker.celery_app worker --loglevel=info --concurrency=2 --queues=search --hostname=search@%h

  # Celery worker for documents
  celery-worker-documents:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://paralegal:paralegal_password@postgres:5432/ai_paralegal
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.worker.celery_app worker --loglevel=info --concurrency=1 --queues=documents --hostname=documents@%h

  # Celery worker for case management
  celery-worker-case:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://paralegal:paralegal_password@postgres:5432/ai_paralegal
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.worker.celery_app worker --loglevel=info --concurrency=2 --queues=case_management --hostname=case@%h

  # Celery Beat scheduler
  celery-beat:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://paralegal:paralegal_password@postgres:5432/ai_paralegal
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./app:/app/app
    depends_on:
      redis:
        condition: service_healthy
    command: celery -A app.worker.celery_app beat --loglevel=info

  # Flower for monitoring
  flower:
    image: mher/flower:latest
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
      - FLOWER_BASIC_AUTH=admin:admin  # Change in production!
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
    command: celery flower --broker=redis://redis:6379/0 --port=5555

volumes:
  postgres_data:
  redis_data:
  qdrant_data: