services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
      - "5678:5678"
    volumes:
      - ./data:/app/data
      - ./app:/app/app
      - ./ingest:/app/ingest
      - /app/app/__pycache__
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_API_KEY=${QDRANT_API_KEY}
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      qdrant:
        condition: service_started
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    environment:
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - QDRANT__SERVICE__GRPC_PORT=6334
    volumes:
      - qdrant_data:/qdrant/storage

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=zeddq1@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
      - "9229:9229"
      - "9230:9230"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
      - NODE_OPTIONS=--enable-source-maps
    depends_on:
      - api
    volumes:
      - ./ui:/app
      - /app/node_modules
      - /app/.next

  # Celery worker for default queue
  celery-worker-default:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      qdrant:
        condition: service_started
    command: celery -A app.worker.celery_app worker --loglevel=info --concurrency=2 --queues=default,high_priority --hostname=default@%h

  # Celery worker for ingestion
  celery-worker-ingestion:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      qdrant:
        condition: service_started
    command: celery -A app.worker.celery_app worker --loglevel=info --concurrency=1 --queues=ingestion --hostname=ingestion@%h --max-tasks-per-child=1

  # Celery worker for embeddings
  celery-worker-embeddings:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      qdrant:
        condition: service_started
    command: celery -A app.worker.celery_app worker --loglevel=info --concurrency=1 --queues=embeddings --hostname=embeddings@%h

  # Celery worker for search
  celery-worker-search:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      qdrant:
        condition: service_started
    command: celery -A app.worker.celery_app worker --loglevel=info --concurrency=2 --queues=search --hostname=search@%h

  # Celery worker for documents
  celery-worker-documents:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    command: celery -A app.worker.celery_app worker --loglevel=info --concurrency=1 --queues=documents --hostname=documents@%h

  # Celery worker for case management
  celery-worker-case:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    command: celery -A app.worker.celery_app worker --loglevel=info --concurrency=2 --queues=case_management --hostname=case@%h

  # Celery Beat scheduler
  celery-beat:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./app:/app/app
    depends_on:
      redis:
        condition: service_started
    command: celery -A app.worker.celery_app beat --loglevel=info

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /Volumes/code/cywil/volumes/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /Volumes/code/cywil/volumes/redis
  qdrant_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /Volumes/code/cywil/volumes/qdrant
