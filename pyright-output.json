{
    "version": "1.1.404",
    "time": "1756088398067",
    "generalDiagnostics": [
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/alembic/env.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 2,
                    "character": 5
                },
                "end": {
                    "line": 2,
                    "character": 15
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/alembic/env.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 3,
                    "character": 5
                },
                "end": {
                    "line": 3,
                    "character": 15
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/alembic/env.py",
            "severity": "information",
            "message": "\"context\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 5,
                    "character": 20
                },
                "end": {
                    "line": 5,
                    "character": 27
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/alembic/env.py",
            "severity": "information",
            "message": "\"SQLModel\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 6,
                    "character": 23
                },
                "end": {
                    "line": 6,
                    "character": 31
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/alembic/versions/00df3e0ab26c_add_created_by_user_column_to_case.py",
            "severity": "information",
            "message": "\"op\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 9,
                    "character": 20
                },
                "end": {
                    "line": 9,
                    "character": 22
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/alembic/versions/00df3e0ab26c_add_created_by_user_column_to_case.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 7
                },
                "end": {
                    "line": 10,
                    "character": 17
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/alembic/versions/00df3e0ab26c_add_created_by_user_column_to_case.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.dialects\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 5
                },
                "end": {
                    "line": 11,
                    "character": 24
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/alembic/versions/00df3e0ab26c_add_created_by_user_column_to_case.py",
            "severity": "error",
            "message": "Import \"sqlmodel\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 7
                },
                "end": {
                    "line": 12,
                    "character": 15
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/auth.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 4,
                    "character": 5
                },
                "end": {
                    "line": 4,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/auth.py",
            "severity": "error",
            "message": "Import \"fastapi.security\" could not be resolved",
            "range": {
                "start": {
                    "line": 5,
                    "character": 5
                },
                "end": {
                    "line": 5,
                    "character": 21
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/auth.py",
            "severity": "warning",
            "message": "Import \"jose\" could not be resolved from source",
            "range": {
                "start": {
                    "line": 6,
                    "character": 5
                },
                "end": {
                    "line": 6,
                    "character": 9
                }
            },
            "rule": "reportMissingModuleSource"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/auth.py",
            "severity": "warning",
            "message": "Import \"jose.jwt\" could not be resolved from source",
            "range": {
                "start": {
                    "line": 6,
                    "character": 27
                },
                "end": {
                    "line": 6,
                    "character": 30
                }
            },
            "rule": "reportMissingModuleSource"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/auth.py",
            "severity": "warning",
            "message": "Import \"passlib.context\" could not be resolved from source",
            "range": {
                "start": {
                    "line": 7,
                    "character": 5
                },
                "end": {
                    "line": 7,
                    "character": 20
                }
            },
            "rule": "reportMissingModuleSource"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/auth.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.ext.asyncio\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 5
                },
                "end": {
                    "line": 8,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/celery_service_wrapper.py",
            "severity": "error",
            "message": "Import \"celery.result\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 5
                },
                "end": {
                    "line": 10,
                    "character": 18
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/celery_service_wrapper.py",
            "severity": "error",
            "message": "Import \"celery.exceptions\" could not be resolved",
            "range": {
                "start": {
                    "line": 262,
                    "character": 13
                },
                "end": {
                    "line": 262,
                    "character": 30
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/config_service.py",
            "severity": "error",
            "message": "Import \"pydantic\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 5
                },
                "end": {
                    "line": 11,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/config_service.py",
            "severity": "error",
            "message": "Import \"pydantic_settings\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 5
                },
                "end": {
                    "line": 12,
                    "character": 22
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/conversation_manager.py",
            "severity": "error",
            "message": "Import \"redis.asyncio\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 7
                },
                "end": {
                    "line": 11,
                    "character": 20
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/conversation_manager.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 5
                },
                "end": {
                    "line": 12,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/conversation_manager.py",
            "severity": "error",
            "message": "Import \"sqlmodel\" could not be resolved",
            "range": {
                "start": {
                    "line": 13,
                    "character": 5
                },
                "end": {
                    "line": 13,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/conversation_manager.py",
            "severity": "error",
            "message": "\"ping\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 80,
                    "character": 37
                },
                "end": {
                    "line": 80,
                    "character": 41
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/database_manager.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 5
                },
                "end": {
                    "line": 8,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/database_manager.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 5
                },
                "end": {
                    "line": 9,
                    "character": 15
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/database_manager.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.ext.asyncio\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 5
                },
                "end": {
                    "line": 10,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/database_manager.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.orm\" could not be resolved",
            "range": {
                "start": {
                    "line": 16,
                    "character": 5
                },
                "end": {
                    "line": 16,
                    "character": 19
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/database_manager.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.orm\" could not be resolved",
            "range": {
                "start": {
                    "line": 66,
                    "character": 13
                },
                "end": {
                    "line": 66,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/database_manager.py",
            "severity": "error",
            "message": "\"begin\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 73,
                    "character": 42
                },
                "end": {
                    "line": 73,
                    "character": 47
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/database_manager.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 74,
                    "character": 21
                },
                "end": {
                    "line": 74,
                    "character": 31
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/database_manager.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 107,
                    "character": 21
                },
                "end": {
                    "line": 107,
                    "character": 31
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/db_optimizations.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 5,
                    "character": 5
                },
                "end": {
                    "line": 5,
                    "character": 15
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/db_optimizations.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.ext.asyncio\" could not be resolved",
            "range": {
                "start": {
                    "line": 6,
                    "character": 5
                },
                "end": {
                    "line": 6,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/db_optimizations.py",
            "severity": "error",
            "message": "\"Dict\" is not defined",
            "range": {
                "start": {
                    "line": 185,
                    "character": 48
                },
                "end": {
                    "line": 185,
                    "character": 52
                }
            },
            "rule": "reportUndefinedVariable"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/db_optimizations.py",
            "severity": "error",
            "message": "\"Any\" is not defined",
            "range": {
                "start": {
                    "line": 185,
                    "character": 58
                },
                "end": {
                    "line": 185,
                    "character": 61
                }
            },
            "rule": "reportUndefinedVariable"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/llm_manager.py",
            "severity": "error",
            "message": "Import \"numpy\" could not be resolved",
            "range": {
                "start": {
                    "line": 7,
                    "character": 7
                },
                "end": {
                    "line": 7,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/llm_manager.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 5
                },
                "end": {
                    "line": 8,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/llm_manager.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 5
                },
                "end": {
                    "line": 9,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/llm_manager.py",
            "severity": "error",
            "message": "Import \"sentence_transformers\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 5
                },
                "end": {
                    "line": 10,
                    "character": 26
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/llm_manager.py",
            "severity": "error",
            "message": "Import \"tenacity\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 5
                },
                "end": {
                    "line": 11,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/llm_manager.py",
            "severity": "error",
            "message": "\"chat\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 162,
                    "character": 45
                },
                "end": {
                    "line": 162,
                    "character": 49
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/llm_manager.py",
            "severity": "error",
            "message": "Type \"list[None]\" is not assignable to return type \"List[List[float]]\"\n  \"list[None]\" is not assignable to \"List[List[float]]\"\n    Type parameter \"_T@list\" is invariant, but \"None\" is not the same as \"List[float]\"\n    Consider switching from \"list\" to \"Sequence\" which is covariant",
            "range": {
                "start": {
                    "line": 237,
                    "character": 23
                },
                "end": {
                    "line": 237,
                    "character": 29
                }
            },
            "rule": "reportReturnType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "Import \"opentelemetry\" could not be resolved",
            "range": {
                "start": {
                    "line": 16,
                    "character": 5
                },
                "end": {
                    "line": 16,
                    "character": 18
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "Import \"opentelemetry.instrumentation.logging\" could not be resolved",
            "range": {
                "start": {
                    "line": 17,
                    "character": 5
                },
                "end": {
                    "line": 17,
                    "character": 42
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "Import \"opentelemetry.sdk.resources\" could not be resolved",
            "range": {
                "start": {
                    "line": 18,
                    "character": 5
                },
                "end": {
                    "line": 18,
                    "character": 32
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "Import \"opentelemetry.sdk.trace\" could not be resolved",
            "range": {
                "start": {
                    "line": 19,
                    "character": 5
                },
                "end": {
                    "line": 19,
                    "character": 28
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "Import \"opentelemetry.sdk.trace.export\" could not be resolved",
            "range": {
                "start": {
                    "line": 20,
                    "character": 5
                },
                "end": {
                    "line": 20,
                    "character": 35
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "Import \"opentelemetry.trace\" could not be resolved",
            "range": {
                "start": {
                    "line": 21,
                    "character": 5
                },
                "end": {
                    "line": 21,
                    "character": 24
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "Import \"starlette.requests\" could not be resolved",
            "range": {
                "start": {
                    "line": 22,
                    "character": 5
                },
                "end": {
                    "line": 22,
                    "character": 23
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "Argument of type \"str\" cannot be assigned to parameter \"style\" of type \"_FormatStyle\" in function \"__init__\"\n  Type \"str\" is not assignable to type \"_FormatStyle\"\n    \"str\" is not assignable to type \"Literal['%']\"\n    \"str\" is not assignable to type \"Literal['{']\"\n    \"str\" is not assignable to type \"Literal['\"]\"",
            "range": {
                "start": {
                    "line": 53,
                    "character": 73
                },
                "end": {
                    "line": 53,
                    "character": 78
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "information",
            "message": "Cannot access attribute \"extra_fields\" for class \"LogRecord\"\n  Attribute \"extra_fields\" is unknown",
            "range": {
                "start": {
                    "line": 103,
                    "character": 35
                },
                "end": {
                    "line": 103,
                    "character": 47
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "information",
            "message": "Cannot access attribute \"user_id\" for class \"LogRecord\"\n  Attribute \"user_id\" is unknown",
            "range": {
                "start": {
                    "line": 105,
                    "character": 41
                },
                "end": {
                    "line": 105,
                    "character": 48
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "information",
            "message": "Cannot access attribute \"correlation_id\" for class \"LogRecord\"\n  Attribute \"correlation_id\" is unknown",
            "range": {
                "start": {
                    "line": 107,
                    "character": 48
                },
                "end": {
                    "line": 107,
                    "character": 62
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "information",
            "message": "Cannot access attribute \"trace_id\" for class \"LogRecord\"\n  Attribute \"trace_id\" is unknown",
            "range": {
                "start": {
                    "line": 109,
                    "character": 42
                },
                "end": {
                    "line": 109,
                    "character": 50
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "information",
            "message": "Cannot access attribute \"client_addr\" for class \"LogRecord\"\n  Attribute \"client_addr\" is unknown",
            "range": {
                "start": {
                    "line": 111,
                    "character": 45
                },
                "end": {
                    "line": 111,
                    "character": 56
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "information",
            "message": "Cannot access attribute \"request_line\" for class \"LogRecord\"\n  Attribute \"request_line\" is unknown",
            "range": {
                "start": {
                    "line": 113,
                    "character": 46
                },
                "end": {
                    "line": 113,
                    "character": 58
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "information",
            "message": "Cannot access attribute \"status_code\" for class \"LogRecord\"\n  Attribute \"status_code\" is unknown",
            "range": {
                "start": {
                    "line": 115,
                    "character": 45
                },
                "end": {
                    "line": 115,
                    "character": 56
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "\"__name__\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 120,
                    "character": 43
                },
                "end": {
                    "line": 120,
                    "character": 51
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "Function declaration \"get_logger\" is obscured by a declaration of the same name",
            "range": {
                "start": {
                    "line": 142,
                    "character": 4
                },
                "end": {
                    "line": 142,
                    "character": 14
                }
            },
            "rule": "reportRedeclaration"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "\"info\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 178,
                    "character": 23
                },
                "end": {
                    "line": 178,
                    "character": 27
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "\"error\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 189,
                    "character": 23
                },
                "end": {
                    "line": 189,
                    "character": 28
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "\"info\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 209,
                    "character": 23
                },
                "end": {
                    "line": 209,
                    "character": 27
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "\"error\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 220,
                    "character": 23
                },
                "end": {
                    "line": 220,
                    "character": 28
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "Object of type \"_GeneratorContextManager[str, None, None]\" cannot be used with \"async with\" because it does not correctly implement __aenter__\n  Attribute \"__aenter__\" is unknown",
            "range": {
                "start": {
                    "line": 531,
                    "character": 19
                },
                "end": {
                    "line": 531,
                    "character": 54
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "Object of type \"_GeneratorContextManager[str, None, None]\" cannot be used with \"with\" because it does not correctly implement __aexit__\n  Attribute \"__aexit__\" is unknown",
            "range": {
                "start": {
                    "line": 531,
                    "character": 19
                },
                "end": {
                    "line": 531,
                    "character": 54
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "Argument missing for parameter \"user_id\"",
            "range": {
                "start": {
                    "line": 533,
                    "character": 16
                },
                "end": {
                    "line": 533,
                    "character": 36
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "No parameter named \"details\"",
            "range": {
                "start": {
                    "line": 570,
                    "character": 16
                },
                "end": {
                    "line": 570,
                    "character": 23
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "Argument missing for parameter \"config_service\"",
            "range": {
                "start": {
                    "line": 582,
                    "character": 8
                },
                "end": {
                    "line": 582,
                    "character": 26
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/logger_manager.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 619,
                    "character": 9
                },
                "end": {
                    "line": 619,
                    "character": 16
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/performance_utils.py",
            "severity": "information",
            "message": "Cannot assign to attribute \"cache\" for class \"_Wrapped[..., Unknown, ..., CoroutineType[Any, Any, Any | Unknown]]\"\n  Attribute \"cache\" is unknown",
            "range": {
                "start": {
                    "line": 149,
                    "character": 16
                },
                "end": {
                    "line": 149,
                    "character": 21
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/performance_utils.py",
            "severity": "error",
            "message": "Type \"dict[str, int | float]\" is not assignable to return type \"Dict[str, int]\"\n  \"float\" is not assignable to \"int\"",
            "range": {
                "start": {
                    "line": 280,
                    "character": 27
                },
                "end": {
                    "line": 280,
                    "character": 36
                }
            },
            "rule": "reportReturnType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/service_interface.py",
            "severity": "error",
            "message": "Type \"None\" is not assignable to declared type \"Dict[str, Any]\"\n  \"None\" is not assignable to \"Dict[str, Any]\"",
            "range": {
                "start": {
                    "line": 31,
                    "character": 30
                },
                "end": {
                    "line": 31,
                    "character": 34
                }
            },
            "rule": "reportAssignmentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/service_interface.py",
            "severity": "error",
            "message": "Type \"None\" is not assignable to declared type \"datetime\"\n  \"None\" is not assignable to \"datetime\"",
            "range": {
                "start": {
                    "line": 32,
                    "character": 26
                },
                "end": {
                    "line": 32,
                    "character": 30
                }
            },
            "rule": "reportAssignmentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/service_interface.py",
            "severity": "error",
            "message": "Type \"ServiceInterface\" is not assignable to return type \"T@get\"\n  Type \"ServiceInterface\" is not assignable to type \"T@get\"",
            "range": {
                "start": {
                    "line": 200,
                    "character": 19
                },
                "end": {
                    "line": 200,
                    "character": 27
                }
            },
            "rule": "reportReturnType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/streaming_handler.py",
            "severity": "error",
            "message": "Import \"openai.types.responses\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 5
                },
                "end": {
                    "line": 10,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/tool_executor.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 5
                },
                "end": {
                    "line": 11,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/tool_executor.py",
            "severity": "error",
            "message": "Argument of type \"float | Literal[0]\" cannot be assigned to parameter \"value\" of type \"int\" in function \"__setitem__\"\n  Type \"float | Literal[0]\" is not assignable to type \"int\"\n    \"float\" is not assignable to \"int\"",
            "range": {
                "start": {
                    "line": 210,
                    "character": 8
                },
                "end": {
                    "line": 210,
                    "character": 31
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/tool_executor.py",
            "severity": "error",
            "message": "Argument of type \"dict[str, str]\" cannot be assigned to parameter \"message\" of type \"str\" in function \"__init__\"",
            "range": {
                "start": {
                    "line": 274,
                    "character": 16
                },
                "end": {
                    "line": 274,
                    "character": 68
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/tool_executor.py",
            "severity": "error",
            "message": "\"() -> CoroutineType[Any, Any, Any]\" is not awaitable",
            "range": {
                "start": {
                    "line": 334,
                    "character": 21
                },
                "end": {
                    "line": 334,
                    "character": 26
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/tool_executor.py",
            "severity": "error",
            "message": "Argument missing for parameter \"validation_errors\"",
            "range": {
                "start": {
                    "line": 431,
                    "character": 18
                },
                "end": {
                    "line": 431,
                    "character": 75
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/tool_registry.py",
            "severity": "error",
            "message": "Import \"pydantic\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 5
                },
                "end": {
                    "line": 12,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/core/tool_registry.py",
            "severity": "error",
            "message": "Argument of type \"List[str]\" cannot be assigned to parameter \"value\" of type \"str\" in function \"__setitem__\"\n  \"List[str]\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 45,
                    "character": 12
                },
                "end": {
                    "line": 45,
                    "character": 26
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/dependencies.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 2,
                    "character": 5
                },
                "end": {
                    "line": 2,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/dependencies.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.ext.asyncio\" could not be resolved",
            "range": {
                "start": {
                    "line": 3,
                    "character": 5
                },
                "end": {
                    "line": 3,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/main.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 5
                },
                "end": {
                    "line": 12,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/main.py",
            "severity": "error",
            "message": "Import \"fastapi.middleware.cors\" could not be resolved",
            "range": {
                "start": {
                    "line": 20,
                    "character": 5
                },
                "end": {
                    "line": 20,
                    "character": 28
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/main.py",
            "severity": "error",
            "message": "Import \"fastapi.responses\" could not be resolved",
            "range": {
                "start": {
                    "line": 21,
                    "character": 5
                },
                "end": {
                    "line": 21,
                    "character": 22
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/main.py",
            "severity": "information",
            "message": "\"trace\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 33,
                    "character": 4
                },
                "end": {
                    "line": 33,
                    "character": 9
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/main.py",
            "severity": "error",
            "message": "Argument of type \"ServiceProxy\" cannot be assigned to parameter \"instance\" of type \"T@register_singleton\" in function \"register_singleton\"\n  \"ServiceProxy\" is not assignable to \"CaseManagementService\"",
            "range": {
                "start": {
                    "line": 105,
                    "character": 68
                },
                "end": {
                    "line": 105,
                    "character": 78
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/main.py",
            "severity": "error",
            "message": "Argument of type \"ServiceProxy\" cannot be assigned to parameter \"instance\" of type \"T@register_singleton\" in function \"register_singleton\"\n  \"ServiceProxy\" is not assignable to \"DocumentGenerationService\"",
            "range": {
                "start": {
                    "line": 111,
                    "character": 72
                },
                "end": {
                    "line": 111,
                    "character": 81
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/main.py",
            "severity": "error",
            "message": "Argument of type \"ServiceProxy\" cannot be assigned to parameter \"instance\" of type \"T@register_singleton\" in function \"register_singleton\"\n  \"ServiceProxy\" is not assignable to \"StatuteSearchService\"",
            "range": {
                "start": {
                    "line": 119,
                    "character": 67
                },
                "end": {
                    "line": 119,
                    "character": 80
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/main.py",
            "severity": "error",
            "message": "Argument of type \"ServiceProxy\" cannot be assigned to parameter \"instance\" of type \"T@register_singleton\" in function \"register_singleton\"\n  \"ServiceProxy\" is not assignable to \"SupremeCourtService\"",
            "range": {
                "start": {
                    "line": 126,
                    "character": 66
                },
                "end": {
                    "line": 126,
                    "character": 79
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/main.py",
            "severity": "error",
            "message": "\"id\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 301,
                    "character": 45
                },
                "end": {
                    "line": 301,
                    "character": 47
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/main.py",
            "severity": "error",
            "message": "\"id\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 352,
                    "character": 31
                },
                "end": {
                    "line": 352,
                    "character": 33
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/main.py",
            "severity": "error",
            "message": "Argument missing for parameter \"user_id\"",
            "range": {
                "start": {
                    "line": 401,
                    "character": 12
                },
                "end": {
                    "line": 401,
                    "character": 32
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "Import \"pydantic\" could not be resolved",
            "range": {
                "start": {
                    "line": 5,
                    "character": 5
                },
                "end": {
                    "line": 5,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 6,
                    "character": 5
                },
                "end": {
                    "line": 6,
                    "character": 15
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "Import \"sqlmodel\" could not be resolved",
            "range": {
                "start": {
                    "line": 7,
                    "character": 5
                },
                "end": {
                    "line": 7,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "Incorrect keyword arguments for __init_subclass__ method",
            "range": {
                "start": {
                    "line": 118,
                    "character": 6
                },
                "end": {
                    "line": 118,
                    "character": 21
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "No parameter named \"table\"",
            "range": {
                "start": {
                    "line": 118,
                    "character": 43
                },
                "end": {
                    "line": 118,
                    "character": 48
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "Incorrect keyword arguments for __init_subclass__ method",
            "range": {
                "start": {
                    "line": 127,
                    "character": 6
                },
                "end": {
                    "line": 127,
                    "character": 10
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "No parameter named \"table\"",
            "range": {
                "start": {
                    "line": 127,
                    "character": 21
                },
                "end": {
                    "line": 127,
                    "character": 26
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "Incorrect keyword arguments for __init_subclass__ method",
            "range": {
                "start": {
                    "line": 143,
                    "character": 6
                },
                "end": {
                    "line": 143,
                    "character": 14
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "No parameter named \"table\"",
            "range": {
                "start": {
                    "line": 143,
                    "character": 29
                },
                "end": {
                    "line": 143,
                    "character": 34
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "Incorrect keyword arguments for __init_subclass__ method",
            "range": {
                "start": {
                    "line": 155,
                    "character": 6
                },
                "end": {
                    "line": 155,
                    "character": 14
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "No parameter named \"table\"",
            "range": {
                "start": {
                    "line": 155,
                    "character": 29
                },
                "end": {
                    "line": 155,
                    "character": 34
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "Incorrect keyword arguments for __init_subclass__ method",
            "range": {
                "start": {
                    "line": 167,
                    "character": 6
                },
                "end": {
                    "line": 167,
                    "character": 10
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "No parameter named \"table\"",
            "range": {
                "start": {
                    "line": 167,
                    "character": 21
                },
                "end": {
                    "line": 167,
                    "character": 26
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "Incorrect keyword arguments for __init_subclass__ method",
            "range": {
                "start": {
                    "line": 179,
                    "character": 6
                },
                "end": {
                    "line": 179,
                    "character": 18
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "No parameter named \"table\"",
            "range": {
                "start": {
                    "line": 179,
                    "character": 29
                },
                "end": {
                    "line": 179,
                    "character": 34
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "Incorrect keyword arguments for __init_subclass__ method",
            "range": {
                "start": {
                    "line": 196,
                    "character": 6
                },
                "end": {
                    "line": 196,
                    "character": 18
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "No parameter named \"table\"",
            "range": {
                "start": {
                    "line": 196,
                    "character": 37
                },
                "end": {
                    "line": 196,
                    "character": 42
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "Incorrect keyword arguments for __init_subclass__ method",
            "range": {
                "start": {
                    "line": 205,
                    "character": 6
                },
                "end": {
                    "line": 205,
                    "character": 14
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "No parameter named \"table\"",
            "range": {
                "start": {
                    "line": 205,
                    "character": 29
                },
                "end": {
                    "line": 205,
                    "character": 34
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "information",
            "message": "Cannot access attribute \"client\" for class \"type[UserRole]\"\n  Attribute \"client\" is unknown",
            "range": {
                "start": {
                    "line": 226,
                    "character": 44
                },
                "end": {
                    "line": 226,
                    "character": 50
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "Incorrect keyword arguments for __init_subclass__ method",
            "range": {
                "start": {
                    "line": 231,
                    "character": 6
                },
                "end": {
                    "line": 231,
                    "character": 10
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "No parameter named \"table\"",
            "range": {
                "start": {
                    "line": 231,
                    "character": 21
                },
                "end": {
                    "line": 231,
                    "character": 26
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "Incorrect keyword arguments for __init_subclass__ method",
            "range": {
                "start": {
                    "line": 246,
                    "character": 6
                },
                "end": {
                    "line": 246,
                    "character": 17
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/models.py",
            "severity": "error",
            "message": "No parameter named \"table\"",
            "range": {
                "start": {
                    "line": 246,
                    "character": 28
                },
                "end": {
                    "line": 246,
                    "character": 33
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/refactored_agent_sdk.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 23,
                    "character": 5
                },
                "end": {
                    "line": 23,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/refactored_agent_sdk.py",
            "severity": "error",
            "message": "Argument of type \"str\" cannot be assigned to parameter \"state\" of type \"ConversationState\" in function \"update_conversation\"\n  \"str\" is not assignable to \"ConversationState\"",
            "range": {
                "start": {
                    "line": 309,
                    "character": 69
                },
                "end": {
                    "line": 309,
                    "character": 84
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/refactored_agent_sdk.py",
            "severity": "error",
            "message": "Argument of type \"ConversationState\" cannot be assigned to parameter \"response_id\" of type \"str | None\" in function \"update_conversation\"\n  Type \"ConversationState\" is not assignable to type \"str | None\"\n    \"ConversationState\" is not assignable to \"str\"\n    \"ConversationState\" is not assignable to \"None\"",
            "range": {
                "start": {
                    "line": 309,
                    "character": 86
                },
                "end": {
                    "line": 309,
                    "character": 96
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/refactored_agent_sdk.py",
            "severity": "error",
            "message": "Arguments missing for parameters \"conversation_manager\", \"tool_executor\"",
            "range": {
                "start": {
                    "line": 501,
                    "character": 12
                },
                "end": {
                    "line": 501,
                    "character": 45
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/tool_wrappers.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 5
                },
                "end": {
                    "line": 11,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/tool_wrappers.py",
            "severity": "error",
            "message": "Import \"pydantic\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 5
                },
                "end": {
                    "line": 12,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/tool_wrappers.py",
            "severity": "error",
            "message": "Argument missing for parameter \"service_type\"",
            "range": {
                "start": {
                    "line": 298,
                    "character": 18
                },
                "end": {
                    "line": 298,
                    "character": 77
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/tool_wrappers.py",
            "severity": "error",
            "message": "Type \"List[SearchSNRulingsResult]\" is not assignable to return type \"str\"\n  \"List[SearchSNRulingsResult]\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 318,
                    "character": 15
                },
                "end": {
                    "line": 318,
                    "character": 32
                }
            },
            "rule": "reportReturnType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/tool_wrappers.py",
            "severity": "error",
            "message": "Type \"list[Any]\" is not assignable to return type \"str\"\n  \"list[Any]\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 321,
                    "character": 15
                },
                "end": {
                    "line": 321,
                    "character": 17
                }
            },
            "rule": "reportReturnType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/tool_wrappers.py",
            "severity": "error",
            "message": "Argument missing for parameter \"service_type\"",
            "range": {
                "start": {
                    "line": 347,
                    "character": 18
                },
                "end": {
                    "line": 347,
                    "character": 78
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/tool_wrappers.py",
            "severity": "error",
            "message": "Type \"list[Any]\" is not assignable to return type \"str\"\n  \"list[Any]\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 355,
                    "character": 15
                },
                "end": {
                    "line": 355,
                    "character": 17
                }
            },
            "rule": "reportReturnType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/tool_wrappers.py",
            "severity": "error",
            "message": "Argument missing for parameter \"service_type\"",
            "range": {
                "start": {
                    "line": 372,
                    "character": 18
                },
                "end": {
                    "line": 372,
                    "character": 83
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/tool_wrappers.py",
            "severity": "error",
            "message": "Argument missing for parameter \"service_type\"",
            "range": {
                "start": {
                    "line": 452,
                    "character": 18
                },
                "end": {
                    "line": 452,
                    "character": 77
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/tool_wrappers.py",
            "severity": "error",
            "message": "Argument missing for parameter \"service_type\"",
            "range": {
                "start": {
                    "line": 502,
                    "character": 18
                },
                "end": {
                    "line": 502,
                    "character": 78
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/tool_wrappers.py",
            "severity": "error",
            "message": "Argument missing for parameter \"service_type\"",
            "range": {
                "start": {
                    "line": 524,
                    "character": 18
                },
                "end": {
                    "line": 524,
                    "character": 83
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/tool_wrappers.py",
            "severity": "error",
            "message": "Argument missing for parameter \"service_type\"",
            "range": {
                "start": {
                    "line": 548,
                    "character": 18
                },
                "end": {
                    "line": 548,
                    "character": 79
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/tool_wrappers.py",
            "severity": "error",
            "message": "Argument missing for parameter \"service_type\"",
            "range": {
                "start": {
                    "line": 570,
                    "character": 18
                },
                "end": {
                    "line": 570,
                    "character": 79
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/tool_wrappers.py",
            "severity": "error",
            "message": "Argument missing for parameter \"service_type\"",
            "range": {
                "start": {
                    "line": 610,
                    "character": 18
                },
                "end": {
                    "line": 610,
                    "character": 79
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/paralegal_agents/tool_wrappers.py",
            "severity": "error",
            "message": "Argument missing for parameter \"service_type\"",
            "range": {
                "start": {
                    "line": 634,
                    "character": 18
                },
                "end": {
                    "line": 634,
                    "character": 77
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/repositories/case_repository.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 5,
                    "character": 5
                },
                "end": {
                    "line": 5,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/repositories/case_repository.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.ext.asyncio\" could not be resolved",
            "range": {
                "start": {
                    "line": 6,
                    "character": 5
                },
                "end": {
                    "line": 6,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/repositories/case_repository.py",
            "severity": "error",
            "message": "Import \"sqlmodel\" could not be resolved",
            "range": {
                "start": {
                    "line": 7,
                    "character": 5
                },
                "end": {
                    "line": 7,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/repositories/user_repository.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 3,
                    "character": 5
                },
                "end": {
                    "line": 3,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/repositories/user_repository.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.ext.asyncio\" could not be resolved",
            "range": {
                "start": {
                    "line": 4,
                    "character": 5
                },
                "end": {
                    "line": 4,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/repositories/user_repository.py",
            "severity": "error",
            "message": "Import \"sqlmodel\" could not be resolved",
            "range": {
                "start": {
                    "line": 5,
                    "character": 5
                },
                "end": {
                    "line": 5,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/routes/auth.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 5
                },
                "end": {
                    "line": 9,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/routes/auth.py",
            "severity": "error",
            "message": "Import \"fastapi.security\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 5
                },
                "end": {
                    "line": 10,
                    "character": 21
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/routes/auth.py",
            "severity": "error",
            "message": "Import \"pydantic\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 5
                },
                "end": {
                    "line": 11,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/routes/auth.py",
            "severity": "error",
            "message": "Import \"sqlmodel\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 5
                },
                "end": {
                    "line": 12,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/routes/auth.py",
            "severity": "error",
            "message": "Import \"sqlmodel\" could not be resolved",
            "range": {
                "start": {
                    "line": 13,
                    "character": 5
                },
                "end": {
                    "line": 13,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/routes/auth.py",
            "severity": "warning",
            "message": "Import \"jose\" could not be resolved from source",
            "range": {
                "start": {
                    "line": 316,
                    "character": 17
                },
                "end": {
                    "line": 316,
                    "character": 21
                }
            },
            "rule": "reportMissingModuleSource"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/routes/auth.py",
            "severity": "warning",
            "message": "Import \"jose.jwt\" could not be resolved from source",
            "range": {
                "start": {
                    "line": 316,
                    "character": 39
                },
                "end": {
                    "line": 316,
                    "character": 42
                }
            },
            "rule": "reportMissingModuleSource"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/routes/auth.py",
            "severity": "error",
            "message": "Type \"Any | None\" is not assignable to declared type \"str\"\n  Type \"Any | None\" is not assignable to type \"str\"\n    \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 332,
                    "character": 27
                },
                "end": {
                    "line": 332,
                    "character": 55
                }
            },
            "rule": "reportAssignmentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/routes/case_management_routes.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 5
                },
                "end": {
                    "line": 8,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/routes/case_management_routes.py",
            "severity": "information",
            "message": "Cannot access attribute \"update_case\" for class \"CaseManagementService\"\n  Attribute \"update_case\" is unknown",
            "range": {
                "start": {
                    "line": 65,
                    "character": 30
                },
                "end": {
                    "line": 65,
                    "character": 41
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/routes/monitoring_routes.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 7,
                    "character": 5
                },
                "end": {
                    "line": 7,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/routes/monitoring_routes.py",
            "severity": "error",
            "message": "Import \"pydantic\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 5
                },
                "end": {
                    "line": 8,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/routes/monitoring_routes.py",
            "severity": "error",
            "message": "Import \"app.core.auth\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 5
                },
                "end": {
                    "line": 10,
                    "character": 18
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/routes/monitoring_routes.py",
            "severity": "error",
            "message": "Import \"app.models.database_models\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 5
                },
                "end": {
                    "line": 12,
                    "character": 31
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/routes/monitoring_routes.py",
            "severity": "error",
            "message": "Import \"celery.result\" could not be resolved",
            "range": {
                "start": {
                    "line": 144,
                    "character": 13
                },
                "end": {
                    "line": 144,
                    "character": 26
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/case_management_service.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 6,
                    "character": 5
                },
                "end": {
                    "line": 6,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/case_management_service.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 61,
                    "character": 13
                },
                "end": {
                    "line": 61,
                    "character": 23
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/case_management_service.py",
            "severity": "error",
            "message": "Argument of type \"str\" cannot be assigned to parameter \"case_id\" of type \"UUID\" in function \"get_case\"\n  \"str\" is not assignable to \"UUID\"",
            "range": {
                "start": {
                    "line": 161,
                    "character": 43
                },
                "end": {
                    "line": 161,
                    "character": 57
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/case_management_service.py",
            "severity": "error",
            "message": "Argument of type \"str\" cannot be assigned to parameter \"user_id\" of type \"UUID\" in function \"list_documents\"\n  \"str\" is not assignable to \"UUID\"",
            "range": {
                "start": {
                    "line": 167,
                    "character": 65
                },
                "end": {
                    "line": 167,
                    "character": 72
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/case_management_service.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 212,
                    "character": 13
                },
                "end": {
                    "line": 212,
                    "character": 23
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/document_generation_service.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 5
                },
                "end": {
                    "line": 8,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/document_generation_service.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 5
                },
                "end": {
                    "line": 9,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/document_generation_service.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 5
                },
                "end": {
                    "line": 10,
                    "character": 15
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/document_generation_service.py",
            "severity": "error",
            "message": "\"chat\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 223,
                    "character": 45
                },
                "end": {
                    "line": 223,
                    "character": 49
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/document_generation_service.py",
            "severity": "error",
            "message": "\"chat\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 304,
                    "character": 49
                },
                "end": {
                    "line": 304,
                    "character": 53
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/document_generation_service.py",
            "severity": "error",
            "message": "\"chat\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 386,
                    "character": 45
                },
                "end": {
                    "line": 386,
                    "character": 49
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/optimized_statute_search.py",
            "severity": "error",
            "message": "Import \"qdrant_client.models\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 5
                },
                "end": {
                    "line": 9,
                    "character": 25
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/optimized_statute_search.py",
            "severity": "error",
            "message": "Argument missing for parameter \"config_service\"",
            "range": {
                "start": {
                    "line": 28,
                    "character": 8
                },
                "end": {
                    "line": 28,
                    "character": 26
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/optimized_statute_search.py",
            "severity": "error",
            "message": "Argument missing for parameter \"process_func\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 32
                },
                "end": {
                    "line": 30,
                    "character": 97
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/optimized_statute_search.py",
            "severity": "error",
            "message": "No parameter named \"batch_size\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 47
                },
                "end": {
                    "line": 30,
                    "character": 57
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/optimized_statute_search.py",
            "severity": "error",
            "message": "No parameter named \"batch_timeout\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 61
                },
                "end": {
                    "line": 30,
                    "character": 74
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/optimized_statute_search.py",
            "severity": "error",
            "message": "No parameter named \"max_concurrent\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 80
                },
                "end": {
                    "line": 30,
                    "character": 94
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/optimized_statute_search.py",
            "severity": "error",
            "message": "\"scroll\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 86,
                    "character": 53
                },
                "end": {
                    "line": 86,
                    "character": 59
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/optimized_statute_search.py",
            "severity": "error",
            "message": "\"get_embedding\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 110,
                    "character": 56
                },
                "end": {
                    "line": 110,
                    "character": 69
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/optimized_statute_search.py",
            "severity": "error",
            "message": "\"search\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 113,
                    "character": 44
                },
                "end": {
                    "line": 113,
                    "character": 50
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/optimized_statute_search.py",
            "severity": "information",
            "message": "Cannot access attribute \"_llm\" for class \"OptimizedStatuteSearchService*\"\n  Attribute \"_llm\" is unknown",
            "range": {
                "start": {
                    "line": 178,
                    "character": 30
                },
                "end": {
                    "line": 178,
                    "character": 34
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/optimized_statute_search.py",
            "severity": "information",
            "message": "Cannot access attribute \"cache\" for class \"MethodType\"\n  Attribute \"cache\" is unknown",
            "range": {
                "start": {
                    "line": 198,
                    "character": 48
                },
                "end": {
                    "line": 198,
                    "character": 53
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/optimized_statute_search.py",
            "severity": "information",
            "message": "Cannot access attribute \"cache\" for class \"MethodType\"\n  Attribute \"cache\" is unknown",
            "range": {
                "start": {
                    "line": 199,
                    "character": 53
                },
                "end": {
                    "line": 199,
                    "character": 58
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/statute_search_service.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 5
                },
                "end": {
                    "line": 8,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/statute_search_service.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 5
                },
                "end": {
                    "line": 9,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/statute_search_service.py",
            "severity": "error",
            "message": "Import \"qdrant_client\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 5
                },
                "end": {
                    "line": 10,
                    "character": 18
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/statute_search_service.py",
            "severity": "error",
            "message": "Import \"qdrant_client.models\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 5
                },
                "end": {
                    "line": 11,
                    "character": 25
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/statute_search_service.py",
            "severity": "error",
            "message": "Import \"sentence_transformers\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 5
                },
                "end": {
                    "line": 12,
                    "character": 26
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/statute_search_service.py",
            "severity": "error",
            "message": "\"get_collections\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 56,
                    "character": 48
                },
                "end": {
                    "line": 56,
                    "character": 63
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/statute_search_service.py",
            "severity": "error",
            "message": "\"get_collections\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 73,
                    "character": 52
                },
                "end": {
                    "line": 73,
                    "character": 67
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/statute_search_service.py",
            "severity": "error",
            "message": "\"encode\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 76,
                    "character": 44
                },
                "end": {
                    "line": 76,
                    "character": 50
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/statute_search_service.py",
            "severity": "error",
            "message": "\"scroll\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 165,
                    "character": 50
                },
                "end": {
                    "line": 165,
                    "character": 56
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/statute_search_service.py",
            "severity": "error",
            "message": "\"encode\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 188,
                    "character": 41
                },
                "end": {
                    "line": 188,
                    "character": 47
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/statute_search_service.py",
            "severity": "error",
            "message": "\"search\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 196,
                    "character": 44
                },
                "end": {
                    "line": 196,
                    "character": 50
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/statute_search_service.py",
            "severity": "error",
            "message": "\"chat\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 252,
                    "character": 45
                },
                "end": {
                    "line": 252,
                    "character": 49
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 5
                },
                "end": {
                    "line": 10,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 5
                },
                "end": {
                    "line": 11,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "error",
            "message": "Import \"qdrant_client\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 5
                },
                "end": {
                    "line": 12,
                    "character": 18
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "error",
            "message": "Import \"qdrant_client.models\" could not be resolved",
            "range": {
                "start": {
                    "line": 13,
                    "character": 5
                },
                "end": {
                    "line": 13,
                    "character": 25
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "error",
            "message": "Import \"sentence_transformers\" could not be resolved",
            "range": {
                "start": {
                    "line": 14,
                    "character": 5
                },
                "end": {
                    "line": 14,
                    "character": 26
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 15,
                    "character": 5
                },
                "end": {
                    "line": 15,
                    "character": 15
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "error",
            "message": "\"get_collections\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 87,
                    "character": 48
                },
                "end": {
                    "line": 87,
                    "character": 63
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "error",
            "message": "\"get_collections\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 104,
                    "character": 52
                },
                "end": {
                    "line": 104,
                    "character": 67
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "error",
            "message": "\"encode\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 107,
                    "character": 44
                },
                "end": {
                    "line": 107,
                    "character": 50
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "error",
            "message": "\"scroll\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 193,
                    "character": 53
                },
                "end": {
                    "line": 193,
                    "character": 59
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "error",
            "message": "\"encode\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 226,
                    "character": 41
                },
                "end": {
                    "line": 226,
                    "character": 47
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "error",
            "message": "\"search\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 250,
                    "character": 44
                },
                "end": {
                    "line": 250,
                    "character": 50
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "error",
            "message": "\"PromptTemplate\" is not defined",
            "range": {
                "start": {
                    "line": 306,
                    "character": 17
                },
                "end": {
                    "line": 306,
                    "character": 31
                }
            },
            "rule": "reportUndefinedVariable"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "information",
            "message": "Cannot access attribute \"_llm\" for class \"SupremeCourtService*\"\n  Attribute \"_llm\" is unknown",
            "range": {
                "start": {
                    "line": 322,
                    "character": 30
                },
                "end": {
                    "line": 322,
                    "character": 34
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "error",
            "message": "\"scroll\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 335,
                    "character": 47
                },
                "end": {
                    "line": 335,
                    "character": 53
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/services/supreme_court_service.py",
            "severity": "error",
            "message": "\"chat\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 378,
                    "character": 45
                },
                "end": {
                    "line": 378,
                    "character": 49
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/task_processors.py",
            "severity": "warning",
            "message": "Import \"aiofiles\" could not be resolved from source",
            "range": {
                "start": {
                    "line": 7,
                    "character": 7
                },
                "end": {
                    "line": 7,
                    "character": 15
                }
            },
            "rule": "reportMissingModuleSource"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/task_processors.py",
            "severity": "error",
            "message": "Import \"fitz\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 7
                },
                "end": {
                    "line": 8,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/task_processors.py",
            "severity": "error",
            "message": "Import \"qdrant_client\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 5
                },
                "end": {
                    "line": 9,
                    "character": 18
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/task_processors.py",
            "severity": "error",
            "message": "Import \"qdrant_client.models\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 5
                },
                "end": {
                    "line": 10,
                    "character": 25
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/task_processors.py",
            "severity": "error",
            "message": "Import \"sentence_transformers\" could not be resolved",
            "range": {
                "start": {
                    "line": 15,
                    "character": 5
                },
                "end": {
                    "line": 15,
                    "character": 26
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/task_processors.py",
            "severity": "information",
            "message": "\"get_db\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 18,
                    "character": 22
                },
                "end": {
                    "line": 18,
                    "character": 28
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/task_processors.py",
            "severity": "error",
            "message": "\"get_collections\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 106,
                    "character": 45
                },
                "end": {
                    "line": 106,
                    "character": 60
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/task_processors.py",
            "severity": "error",
            "message": "\"get_sentence_embedding_dimension\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 111,
                    "character": 44
                },
                "end": {
                    "line": 111,
                    "character": 76
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/task_processors.py",
            "severity": "error",
            "message": "\"create_collection\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 112,
                    "character": 35
                },
                "end": {
                    "line": 112,
                    "character": 52
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/task_processors.py",
            "severity": "error",
            "message": "\"encode\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 234,
                    "character": 46
                },
                "end": {
                    "line": 234,
                    "character": 52
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/task_processors.py",
            "severity": "error",
            "message": "\"upsert\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 264,
                    "character": 39
                },
                "end": {
                    "line": 264,
                    "character": 45
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/validator.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 2,
                    "character": 5
                },
                "end": {
                    "line": 2,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/validator.py",
            "severity": "error",
            "message": "Import \"pydantic\" could not be resolved",
            "range": {
                "start": {
                    "line": 3,
                    "character": 5
                },
                "end": {
                    "line": 3,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/base_task.py",
            "severity": "error",
            "message": "Import \"celery\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 5
                },
                "end": {
                    "line": 8,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/base_task.py",
            "severity": "error",
            "message": "Import \"celery.exceptions\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 5
                },
                "end": {
                    "line": 9,
                    "character": 22
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/base_task.py",
            "severity": "error",
            "message": "Import \"kombu.exceptions\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 5
                },
                "end": {
                    "line": 10,
                    "character": 21
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/base_task.py",
            "severity": "information",
            "message": "\"process_dead_letter_item\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 218,
                    "character": 53
                },
                "end": {
                    "line": 218,
                    "character": 77
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/base_task.py",
            "severity": "error",
            "message": "Import \"redis\" could not be resolved",
            "range": {
                "start": {
                    "line": 331,
                    "character": 19
                },
                "end": {
                    "line": 331,
                    "character": 24
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/celery_app.py",
            "severity": "error",
            "message": "Import \"celery\" could not be resolved",
            "range": {
                "start": {
                    "line": 6,
                    "character": 5
                },
                "end": {
                    "line": 6,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/config.py",
            "severity": "error",
            "message": "Import \"kombu\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 5
                },
                "end": {
                    "line": 8,
                    "character": 10
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/ingestion_api.py",
            "severity": "error",
            "message": "Import \"celery.result\" could not be resolved",
            "range": {
                "start": {
                    "line": 6,
                    "character": 5
                },
                "end": {
                    "line": 6,
                    "character": 18
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/ingestion_api.py",
            "severity": "error",
            "message": "Import \"fastapi\" could not be resolved",
            "range": {
                "start": {
                    "line": 7,
                    "character": 5
                },
                "end": {
                    "line": 7,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/ingestion_api.py",
            "severity": "error",
            "message": "Import \"fastapi.responses\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 5
                },
                "end": {
                    "line": 8,
                    "character": 22
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/ingestion_api.py",
            "severity": "error",
            "message": "Import \"pydantic\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 5
                },
                "end": {
                    "line": 9,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/ingestion_api.py",
            "severity": "error",
            "message": "Import \"app.core.auth_middleware\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 5
                },
                "end": {
                    "line": 11,
                    "character": 29
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/ingestion_api.py",
            "severity": "error",
            "message": "Import \"uvicorn\" could not be resolved",
            "range": {
                "start": {
                    "line": 325,
                    "character": 11
                },
                "end": {
                    "line": 325,
                    "character": 18
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/logging_config.py",
            "severity": "error",
            "message": "Import \"pythonjsonlogger\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 5
                },
                "end": {
                    "line": 11,
                    "character": 21
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/logging_config.py",
            "severity": "error",
            "message": "Import \"celery\" could not be resolved",
            "range": {
                "start": {
                    "line": 23,
                    "character": 13
                },
                "end": {
                    "line": 23,
                    "character": 19
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/monitoring.py",
            "severity": "error",
            "message": "Import \"redis\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 7
                },
                "end": {
                    "line": 11,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/monitoring.py",
            "severity": "error",
            "message": "Import \"celery.signals\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 5
                },
                "end": {
                    "line": 12,
                    "character": 19
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/monitoring.py",
            "severity": "error",
            "message": "\"request\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 244,
                    "character": 21
                },
                "end": {
                    "line": 244,
                    "character": 28
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/monitoring.py",
            "severity": "error",
            "message": "\"request\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 245,
                    "character": 24
                },
                "end": {
                    "line": 245,
                    "character": 31
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/monitoring.py",
            "severity": "error",
            "message": "Argument of type \"Unknown | None\" cannot be assigned to parameter \"task_id\" of type \"str\" in function \"__init__\"\n  Type \"Unknown | None\" is not assignable to type \"str\"\n    \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 249,
                    "character": 20
                },
                "end": {
                    "line": 249,
                    "character": 27
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/monitoring.py",
            "severity": "error",
            "message": "Argument of type \"Unknown | None\" cannot be assigned to parameter \"key\" of type \"str\" in function \"__setitem__\"\n  Type \"Unknown | None\" is not assignable to type \"str\"\n    \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 259,
                    "character": 8
                },
                "end": {
                    "line": 259,
                    "character": 34
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/monitoring.py",
            "severity": "error",
            "message": "Argument of type \"Unknown | None\" cannot be assigned to parameter \"key\" of type \"str\" in function \"__setitem__\"\n  Type \"Unknown | None\" is not assignable to type \"str\"\n    \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 263,
                    "character": 12
                },
                "end": {
                    "line": 263,
                    "character": 64
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/monitoring.py",
            "severity": "error",
            "message": "Argument of type \"Unknown | None\" cannot be assigned to parameter \"task_id\" of type \"str\" in function \"__init__\"\n  Type \"Unknown | None\" is not assignable to type \"str\"\n    \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 350,
                    "character": 24
                },
                "end": {
                    "line": 350,
                    "character": 31
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/monitoring.py",
            "severity": "error",
            "message": "Argument of type \"Unknown | None\" cannot be assigned to parameter \"key\" of type \"str\" in function \"__setitem__\"\n  Type \"Unknown | None\" is not assignable to type \"str\"\n    \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 357,
                    "character": 12
                },
                "end": {
                    "line": 357,
                    "character": 38
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/monitoring.py",
            "severity": "error",
            "message": "Argument of type \"Unknown | None\" cannot be assigned to parameter \"task_id\" of type \"str\" in function \"_send_to_dlq\"\n  Type \"Unknown | None\" is not assignable to type \"str\"\n    \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 378,
                    "character": 30
                },
                "end": {
                    "line": 378,
                    "character": 37
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/service_registry.py",
            "severity": "error",
            "message": "Import \"celery.signals\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 5
                },
                "end": {
                    "line": 12,
                    "character": 19
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/service_registry.py",
            "severity": "error",
            "message": "Import \"app.repositories.ruling_repository\" could not be resolved",
            "range": {
                "start": {
                    "line": 19,
                    "character": 5
                },
                "end": {
                    "line": 19,
                    "character": 39
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/service_registry.py",
            "severity": "error",
            "message": "Import \"app.repositories.statute_repository\" could not be resolved",
            "range": {
                "start": {
                    "line": 20,
                    "character": 5
                },
                "end": {
                    "line": 20,
                    "character": 40
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/service_registry.py",
            "severity": "error",
            "message": "Import \"app.services.case_service\" could not be resolved",
            "range": {
                "start": {
                    "line": 22,
                    "character": 5
                },
                "end": {
                    "line": 22,
                    "character": 30
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/service_registry.py",
            "severity": "error",
            "message": "Import \"app.services.embedding_service\" could not be resolved",
            "range": {
                "start": {
                    "line": 24,
                    "character": 5
                },
                "end": {
                    "line": 24,
                    "character": 35
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/service_registry.py",
            "severity": "error",
            "message": "Import \"app.services.ruling_ingestion_service\" could not be resolved",
            "range": {
                "start": {
                    "line": 25,
                    "character": 5
                },
                "end": {
                    "line": 25,
                    "character": 42
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/service_registry.py",
            "severity": "error",
            "message": "Import \"app.services.statute_ingestion_service\" could not be resolved",
            "range": {
                "start": {
                    "line": 26,
                    "character": 5
                },
                "end": {
                    "line": 26,
                    "character": 43
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/service_registry.py",
            "severity": "error",
            "message": "Import \"app.services.user_service\" could not be resolved",
            "range": {
                "start": {
                    "line": 29,
                    "character": 5
                },
                "end": {
                    "line": 29,
                    "character": 30
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/service_registry.py",
            "severity": "error",
            "message": "Expected 0 positional arguments",
            "range": {
                "start": {
                    "line": 73,
                    "character": 63
                },
                "end": {
                    "line": 73,
                    "character": 73
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/service_registry.py",
            "severity": "error",
            "message": "Expected 0 positional arguments",
            "range": {
                "start": {
                    "line": 76,
                    "character": 63
                },
                "end": {
                    "line": 76,
                    "character": 73
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/case_tasks.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 104,
                    "character": 21
                },
                "end": {
                    "line": 104,
                    "character": 31
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/case_tasks.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 167,
                    "character": 21
                },
                "end": {
                    "line": 167,
                    "character": 31
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/case_tasks.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 233,
                    "character": 21
                },
                "end": {
                    "line": 233,
                    "character": 31
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/case_tasks.py",
            "severity": "information",
            "message": "Cannot access attribute \"ilike\" for class \"str\"\n  Attribute \"ilike\" is unknown",
            "range": {
                "start": {
                    "line": 243,
                    "character": 45
                },
                "end": {
                    "line": 243,
                    "character": 50
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/case_tasks.py",
            "severity": "error",
            "message": "\"ilike\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 243,
                    "character": 45
                },
                "end": {
                    "line": 243,
                    "character": 50
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/case_tasks.py",
            "severity": "information",
            "message": "Cannot access attribute \"ilike\" for class \"str\"\n  Attribute \"ilike\" is unknown",
            "range": {
                "start": {
                    "line": 244,
                    "character": 50
                },
                "end": {
                    "line": 244,
                    "character": 55
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/case_tasks.py",
            "severity": "information",
            "message": "Cannot access attribute \"ilike\" for class \"str\"\n  Attribute \"ilike\" is unknown",
            "range": {
                "start": {
                    "line": 245,
                    "character": 45
                },
                "end": {
                    "line": 245,
                    "character": 50
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/case_tasks.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 313,
                    "character": 21
                },
                "end": {
                    "line": 313,
                    "character": 31
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/case_tasks.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 398,
                    "character": 21
                },
                "end": {
                    "line": 398,
                    "character": 31
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/case_tasks.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.orm\" could not be resolved",
            "range": {
                "start": {
                    "line": 399,
                    "character": 21
                },
                "end": {
                    "line": 399,
                    "character": 35
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/embed.py",
            "severity": "error",
            "message": "Import \"numpy\" could not be resolved",
            "range": {
                "start": {
                    "line": 7,
                    "character": 7
                },
                "end": {
                    "line": 7,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/embed.py",
            "severity": "error",
            "message": "Import \"qdrant_client\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 5
                },
                "end": {
                    "line": 8,
                    "character": 18
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/embed.py",
            "severity": "error",
            "message": "Import \"qdrant_client.models\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 5
                },
                "end": {
                    "line": 9,
                    "character": 25
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/embed.py",
            "severity": "error",
            "message": "Import \"sentence_transformers\" could not be resolved",
            "range": {
                "start": {
                    "line": 18,
                    "character": 5
                },
                "end": {
                    "line": 18,
                    "character": 26
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/embed.py",
            "severity": "error",
            "message": "Expression of type \"None\" cannot be assigned to parameter of type \"str\"\n  \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 324,
                    "character": 23
                },
                "end": {
                    "line": 324,
                    "character": 27
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/embedding_tasks.py",
            "severity": "error",
            "message": "Import \"qdrant_client\" could not be resolved",
            "range": {
                "start": {
                    "line": 186,
                    "character": 17
                },
                "end": {
                    "line": 186,
                    "character": 30
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/embedding_tasks.py",
            "severity": "information",
            "message": "Cannot access attribute \"close\" for class \"DatabaseManager\"\n  Attribute \"close\" is unknown",
            "range": {
                "start": {
                    "line": 277,
                    "character": 33
                },
                "end": {
                    "line": 277,
                    "character": 38
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/ingestion_pipeline.py",
            "severity": "error",
            "message": "Import \"celery\" could not be resolved",
            "range": {
                "start": {
                    "line": 6,
                    "character": 5
                },
                "end": {
                    "line": 6,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/ingestion_pipeline.py",
            "severity": "information",
            "message": "\"generate_statute_embeddings\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 12,
                    "character": 27
                },
                "end": {
                    "line": 12,
                    "character": 54
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/maintenance.py",
            "severity": "error",
            "message": "Import \"redis\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 7
                },
                "end": {
                    "line": 9,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/maintenance.py",
            "severity": "error",
            "message": "Import \"qdrant_client\" could not be resolved",
            "range": {
                "start": {
                    "line": 76,
                    "character": 21
                },
                "end": {
                    "line": 76,
                    "character": 34
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/maintenance.py",
            "severity": "error",
            "message": "\"ConfigService\" is not defined",
            "range": {
                "start": {
                    "line": 414,
                    "character": 25
                },
                "end": {
                    "line": 414,
                    "character": 38
                }
            },
            "rule": "reportUndefinedVariable"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/maintenance.py",
            "severity": "error",
            "message": "Import \"qdrant_client\" could not be resolved",
            "range": {
                "start": {
                    "line": 415,
                    "character": 13
                },
                "end": {
                    "line": 415,
                    "character": 26
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/pdf2chunks.py",
            "severity": "error",
            "message": "Import \"pdfplumber\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 7
                },
                "end": {
                    "line": 8,
                    "character": 17
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"Match[str] | None\" cannot be assigned to parameter \"text\" of type \"str\" in function \"_match_hierarchy_element\"\n  Type \"Match[str] | None\" is not assignable to type \"str\"\n    \"Match[str]\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 157,
                    "character": 58
                },
                "end": {
                    "line": 157,
                    "character": 67
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/pdf2chunks.py",
            "severity": "information",
            "message": "Cannot assign to attribute \"current_title\" for class \"HierarchyElement\"\n  Type \"Match[str] | None\" is not assignable to type \"str | None\"\n    Type \"Match[str]\" is not assignable to type \"str | None\"\n      \"Match[str]\" is not assignable to \"str\"\n      \"Match[str]\" is not assignable to \"None\"",
            "range": {
                "start": {
                    "line": 158,
                    "character": 40
                },
                "end": {
                    "line": 158,
                    "character": 49
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"Literal['']\" cannot be assigned to parameter \"next_line\" of type \"Match[str] | None\" in function \"_process_hierarchy_element\"\n  Type \"Literal['']\" is not assignable to type \"Match[str] | None\"\n    \"Literal['']\" is not assignable to \"Match[str]\"\n    \"Literal['']\" is not assignable to \"None\"",
            "range": {
                "start": {
                    "line": 217,
                    "character": 63
                },
                "end": {
                    "line": 217,
                    "character": 65
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/pdf2chunks.py",
            "severity": "error",
            "message": "No overloads for \"update\" match the provided arguments",
            "range": {
                "start": {
                    "line": 238,
                    "character": 12
                },
                "end": {
                    "line": 238,
                    "character": 74
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"dict[str, Dict[Unknown, Unknown]]\" cannot be assigned to parameter \"m\" of type \"Iterable[tuple[str, str]]\" in function \"update\"\n  \"Literal['hierarchy']\" is not assignable to \"tuple[str, str]\"",
            "range": {
                "start": {
                    "line": 238,
                    "character": 29
                },
                "end": {
                    "line": 238,
                    "character": 40
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"Literal['']\" cannot be assigned to parameter \"next_line\" of type \"Match[str] | None\" in function \"_process_hierarchy_element\"\n  Type \"Literal['']\" is not assignable to type \"Match[str] | None\"\n    \"Literal['']\" is not assignable to \"Match[str]\"\n    \"Literal['']\" is not assignable to \"None\"",
            "range": {
                "start": {
                    "line": 247,
                    "character": 41
                },
                "end": {
                    "line": 247,
                    "character": 43
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"str | None\" cannot be assigned to parameter \"title\" of type \"str\" in function \"__init__\"\n  Type \"str | None\" is not assignable to type \"str\"\n    \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 257,
                    "character": 34
                },
                "end": {
                    "line": 257,
                    "character": 74
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"str | None\" cannot be assigned to parameter \"title\" of type \"str\" in function \"__init__\"\n  Type \"str | None\" is not assignable to type \"str\"\n    \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 274,
                    "character": 30
                },
                "end": {
                    "line": 274,
                    "character": 70
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"str\" cannot be assigned to parameter \"next_line\" of type \"Match[str] | None\" in function \"_process_hierarchy_element\"\n  Type \"str\" is not assignable to type \"Match[str] | None\"\n    \"str\" is not assignable to \"Match[str]\"\n    \"str\" is not assignable to \"None\"",
            "range": {
                "start": {
                    "line": 337,
                    "character": 20
                },
                "end": {
                    "line": 337,
                    "character": 70
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/pdf2chunks.py",
            "severity": "error",
            "message": "Type \"LiteralString | None\" is not assignable to return type \"str\"\n  Type \"LiteralString | None\" is not assignable to type \"str\"\n    \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 360,
                    "character": 15
                },
                "end": {
                    "line": 360,
                    "character": 61
                }
            },
            "rule": "reportReturnType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"str | None\" cannot be assigned to parameter \"obj\" of type \"Sized\" in function \"len\"\n  Type \"str | None\" is not assignable to type \"Sized\"\n    \"None\" is incompatible with protocol \"Sized\"\n      \"__len__\" is not present",
            "range": {
                "start": {
                    "line": 416,
                    "character": 19
                },
                "end": {
                    "line": 416,
                    "character": 34
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/pdf2chunks.py",
            "severity": "error",
            "message": "Operator \"+\" not supported for types \"str\" and \"str | None\"\n  Operator \"+\" not supported for types \"str\" and \"None\"",
            "range": {
                "start": {
                    "line": 420,
                    "character": 32
                },
                "end": {
                    "line": 420,
                    "character": 64
                }
            },
            "rule": "reportOperatorIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"str | None\" cannot be assigned to parameter \"text\" of type \"str\" in function \"_split_article\"\n  Type \"str | None\" is not assignable to type \"str\"\n    \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 432,
                    "character": 49
                },
                "end": {
                    "line": 432,
                    "character": 64
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/pdf2chunks.py",
            "severity": "error",
            "message": "Object of type \"None\" is not subscriptable",
            "range": {
                "start": {
                    "line": 595,
                    "character": 36
                },
                "end": {
                    "line": 595,
                    "character": 51
                }
            },
            "rule": "reportOptionalSubscript"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "warning",
            "message": "Import \"dateparser\" could not be resolved from source",
            "range": {
                "start": {
                    "line": 21,
                    "character": 7
                },
                "end": {
                    "line": 21,
                    "character": 17
                }
            },
            "rule": "reportMissingModuleSource"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"fitz\" could not be resolved",
            "range": {
                "start": {
                    "line": 22,
                    "character": 7
                },
                "end": {
                    "line": 22,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"langchain.output_parsers\" could not be resolved",
            "range": {
                "start": {
                    "line": 23,
                    "character": 5
                },
                "end": {
                    "line": 23,
                    "character": 29
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"langchain.prompts\" could not be resolved",
            "range": {
                "start": {
                    "line": 24,
                    "character": 5
                },
                "end": {
                    "line": 24,
                    "character": 22
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"langchain.schema\" could not be resolved",
            "range": {
                "start": {
                    "line": 25,
                    "character": 5
                },
                "end": {
                    "line": 25,
                    "character": 21
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"langchain_openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 26,
                    "character": 5
                },
                "end": {
                    "line": 26,
                    "character": 21
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 27,
                    "character": 5
                },
                "end": {
                    "line": 27,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 28,
                    "character": 5
                },
                "end": {
                    "line": 28,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"openai.types.responses\" could not be resolved",
            "range": {
                "start": {
                    "line": 29,
                    "character": 5
                },
                "end": {
                    "line": 29,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"pydantic\" could not be resolved",
            "range": {
                "start": {
                    "line": 32,
                    "character": 5
                },
                "end": {
                    "line": 32,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "\"response\" is unbound",
            "range": {
                "start": {
                    "line": 186,
                    "character": 34
                },
                "end": {
                    "line": 186,
                    "character": 42
                }
            },
            "rule": "reportUnboundVariable"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Type \"CoroutineType[Any, Any, Ruling]\" is not assignable to return type \"ParsedRuling | bytes\"\n  Type \"CoroutineType[Any, Any, Ruling]\" is not assignable to type \"ParsedRuling | bytes\"\n    \"CoroutineType[Any, Any, Ruling]\" is not assignable to \"ParsedRuling\"\n    \"CoroutineType[Any, Any, Ruling]\" is not assignable to \"bytes\"",
            "range": {
                "start": {
                    "line": 188,
                    "character": 15
                },
                "end": {
                    "line": 188,
                    "character": 40
                }
            },
            "rule": "reportReturnType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "\"batch\" is not defined",
            "range": {
                "start": {
                    "line": 338,
                    "character": 12
                },
                "end": {
                    "line": 338,
                    "character": 17
                }
            },
            "rule": "reportUndefinedVariable"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "\"i\" is unbound",
            "range": {
                "start": {
                    "line": 340,
                    "character": 65
                },
                "end": {
                    "line": 340,
                    "character": 66
                }
            },
            "rule": "reportUnboundVariable"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "\"batch\" is not defined",
            "range": {
                "start": {
                    "line": 341,
                    "character": 24
                },
                "end": {
                    "line": 341,
                    "character": 29
                }
            },
            "rule": "reportUndefinedVariable"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "information",
            "message": "Cannot access attribute \"paragraphs\" for class \"bytes\"\n  Attribute \"paragraphs\" is unknown",
            "range": {
                "start": {
                    "line": 462,
                    "character": 38
                },
                "end": {
                    "line": 462,
                    "character": 48
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Argument missing for parameter \"index\"",
            "range": {
                "start": {
                    "line": 468,
                    "character": 23
                },
                "end": {
                    "line": 468,
                    "character": 55
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "No overloads for \"open\" match the provided arguments",
            "range": {
                "start": {
                    "line": 547,
                    "character": 13
                },
                "end": {
                    "line": 547,
                    "character": 57
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Argument of type \"Path | None\" cannot be assigned to parameter \"file\" of type \"FileDescriptorOrPath\" in function \"open\"\n  Type \"Path | None\" is not assignable to type \"FileDescriptorOrPath\"\n    Type \"None\" is not assignable to type \"FileDescriptorOrPath\"\n      \"None\" is not assignable to \"int\"\n      \"None\" is not assignable to \"str\"\n      \"None\" is not assignable to \"bytes\"\n      \"None\" is incompatible with protocol \"PathLike[str]\"\n        \"__fspath__\" is not present\n      \"None\" is incompatible with protocol \"PathLike[bytes]\"\n  ...",
            "range": {
                "start": {
                    "line": 547,
                    "character": 18
                },
                "end": {
                    "line": 547,
                    "character": 33
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "No overloads for \"open\" match the provided arguments",
            "range": {
                "start": {
                    "line": 573,
                    "character": 13
                },
                "end": {
                    "line": 573,
                    "character": 57
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Argument of type \"Path | None\" cannot be assigned to parameter \"file\" of type \"FileDescriptorOrPath\" in function \"open\"\n  Type \"Path | None\" is not assignable to type \"FileDescriptorOrPath\"\n    Type \"None\" is not assignable to type \"FileDescriptorOrPath\"\n      \"None\" is not assignable to \"int\"\n      \"None\" is not assignable to \"str\"\n      \"None\" is not assignable to \"bytes\"\n      \"None\" is incompatible with protocol \"PathLike[str]\"\n        \"__fspath__\" is not present\n      \"None\" is incompatible with protocol \"PathLike[bytes]\"\n  ...",
            "range": {
                "start": {
                    "line": 573,
                    "character": 18
                },
                "end": {
                    "line": 573,
                    "character": 33
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "\"paragraphs\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 626,
                    "character": 43
                },
                "end": {
                    "line": 626,
                    "character": 53
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "\"meta\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 644,
                    "character": 19
                },
                "end": {
                    "line": 644,
                    "character": 23
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Argument of type \"list[List[Dict[str, Any]] | None]\" cannot be assigned to parameter \"records\" of type \"List[Dict[str, Any]]\" in function \"validate_output\"\n  \"list[List[Dict[str, Any]] | None]\" is not assignable to \"List[Dict[str, Any]]\"\n    Type parameter \"_T@list\" is invariant, but \"List[Dict[str, Any]] | None\" is not the same as \"Dict[str, Any]\"\n    Consider switching from \"list\" to \"Sequence\" which is covariant",
            "range": {
                "start": {
                    "line": 782,
                    "character": 65
                },
                "end": {
                    "line": 782,
                    "character": 72
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/ruling_tasks.py",
            "severity": "information",
            "message": "Cannot access attribute \"initialize\" for class \"None\"\n  Attribute \"initialize\" is unknown",
            "range": {
                "start": {
                    "line": 175,
                    "character": 26
                },
                "end": {
                    "line": 175,
                    "character": 36
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/ruling_tasks.py",
            "severity": "error",
            "message": "\"Never\" is not awaitable",
            "range": {
                "start": {
                    "line": 185,
                    "character": 22
                },
                "end": {
                    "line": 185,
                    "character": 40
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/ruling_tasks.py",
            "severity": "information",
            "message": "Cannot access attribute \"initialize\" for class \"None\"\n  Attribute \"initialize\" is unknown",
            "range": {
                "start": {
                    "line": 217,
                    "character": 26
                },
                "end": {
                    "line": 217,
                    "character": 36
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/ruling_tasks.py",
            "severity": "error",
            "message": "\"Never\" is not awaitable",
            "range": {
                "start": {
                    "line": 230,
                    "character": 22
                },
                "end": {
                    "line": 230,
                    "character": 40
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/search_tasks.py",
            "severity": "information",
            "message": "Cannot access attribute \"search\" for class \"StatuteSearchService\"\n  Attribute \"search\" is unknown",
            "range": {
                "start": {
                    "line": 56,
                    "character": 44
                },
                "end": {
                    "line": 56,
                    "character": 50
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/search_tasks.py",
            "severity": "information",
            "message": "Cannot access attribute \"search_rulings\" for class \"SupremeCourtService\"\n  Attribute \"search_rulings\" is unknown",
            "range": {
                "start": {
                    "line": 120,
                    "character": 50
                },
                "end": {
                    "line": 120,
                    "character": 64
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/search_tasks.py",
            "severity": "information",
            "message": "Cannot access attribute \"search_rulings\" for class \"SupremeCourtService\"\n  Attribute \"search_rulings\" is unknown",
            "range": {
                "start": {
                    "line": 222,
                    "character": 58
                },
                "end": {
                    "line": 222,
                    "character": 72
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/search_tasks.py",
            "severity": "error",
            "message": "\"group\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 326,
                    "character": 65
                },
                "end": {
                    "line": 326,
                    "character": 70
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/sn.py",
            "severity": "warning",
            "message": "Import \"dateparser\" could not be resolved from source",
            "range": {
                "start": {
                    "line": 8,
                    "character": 7
                },
                "end": {
                    "line": 8,
                    "character": 17
                }
            },
            "rule": "reportMissingModuleSource"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/sn.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 7
                },
                "end": {
                    "line": 9,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/sn.py",
            "severity": "error",
            "message": "Import \"deepdiff\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 5
                },
                "end": {
                    "line": 10,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/sn.py",
            "severity": "error",
            "message": "Import \"dotenv\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 5
                },
                "end": {
                    "line": 11,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/sn.py",
            "severity": "error",
            "message": "Import \"qdrant_client\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 5
                },
                "end": {
                    "line": 12,
                    "character": 18
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/sn.py",
            "severity": "error",
            "message": "Import \"sentence_transformers\" could not be resolved",
            "range": {
                "start": {
                    "line": 13,
                    "character": 5
                },
                "end": {
                    "line": 13,
                    "character": 26
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/sn.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 14,
                    "character": 5
                },
                "end": {
                    "line": 14,
                    "character": 15
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/sn.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.ext.asyncio\" could not be resolved",
            "range": {
                "start": {
                    "line": 15,
                    "character": 5
                },
                "end": {
                    "line": 15,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/sn.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.orm\" could not be resolved",
            "range": {
                "start": {
                    "line": 16,
                    "character": 5
                },
                "end": {
                    "line": 16,
                    "character": 19
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/sn.py",
            "severity": "error",
            "message": "\"strftime\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 122,
                    "character": 76
                },
                "end": {
                    "line": 122,
                    "character": 84
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/app/worker/tasks/statute_tasks.py",
            "severity": "information",
            "message": "Cannot access attribute \"close\" for class \"DatabaseManager\"\n  Attribute \"close\" is unknown",
            "range": {
                "start": {
                    "line": 199,
                    "character": 33
                },
                "end": {
                    "line": 199,
                    "character": 38
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/example_logger_usage.py",
            "severity": "error",
            "message": "Import \"app.logging_config\" could not be resolved",
            "range": {
                "start": {
                    "line": 3,
                    "character": 5
                },
                "end": {
                    "line": 3,
                    "character": 23
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/example_logger_usage.py",
            "severity": "information",
            "message": "\"configure_logging\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 6,
                    "character": 4
                },
                "end": {
                    "line": 6,
                    "character": 21
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/example_logger_usage.py",
            "severity": "information",
            "message": "\"logger_manager\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 7,
                    "character": 4
                },
                "end": {
                    "line": 7,
                    "character": 18
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/example_logger_usage.py",
            "severity": "information",
            "message": "\"LOGGING_PRESETS\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 8,
                    "character": 4
                },
                "end": {
                    "line": 8,
                    "character": 19
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/example_logger_usage.py",
            "severity": "information",
            "message": "\"wrap_all_loggers\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 9,
                    "character": 4
                },
                "end": {
                    "line": 9,
                    "character": 20
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/example_service_logging.py",
            "severity": "error",
            "message": "Import \"app.core.logging_middleware\" could not be resolved",
            "range": {
                "start": {
                    "line": 3,
                    "character": 5
                },
                "end": {
                    "line": 3,
                    "character": 32
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/embed.py",
            "severity": "error",
            "message": "Import \"numpy\" could not be resolved",
            "range": {
                "start": {
                    "line": 1,
                    "character": 7
                },
                "end": {
                    "line": 1,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/embed.py",
            "severity": "error",
            "message": "Import \"sentence_transformers\" could not be resolved",
            "range": {
                "start": {
                    "line": 2,
                    "character": 5
                },
                "end": {
                    "line": 2,
                    "character": 26
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/embed.py",
            "severity": "error",
            "message": "Import \"qdrant_client\" could not be resolved",
            "range": {
                "start": {
                    "line": 6,
                    "character": 5
                },
                "end": {
                    "line": 6,
                    "character": 18
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/embed.py",
            "severity": "error",
            "message": "Import \"qdrant_client.models\" could not be resolved",
            "range": {
                "start": {
                    "line": 7,
                    "character": 5
                },
                "end": {
                    "line": 7,
                    "character": 25
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/embed.py",
            "severity": "error",
            "message": "Expression of type \"None\" cannot be assigned to parameter of type \"str\"\n  \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 324,
                    "character": 23
                },
                "end": {
                    "line": 324,
                    "character": 27
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/ingest_pipeline.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 21,
                    "character": 5
                },
                "end": {
                    "line": 21,
                    "character": 15
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/ingest_pipeline.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.orm\" could not be resolved",
            "range": {
                "start": {
                    "line": 22,
                    "character": 5
                },
                "end": {
                    "line": 22,
                    "character": 19
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/ingest_pipeline.py",
            "severity": "error",
            "message": "Expression of type \"None\" cannot be assigned to parameter of type \"Dict[Unknown, Unknown]\"\n  \"None\" is not assignable to \"Dict[Unknown, Unknown]\"",
            "range": {
                "start": {
                    "line": 32,
                    "character": 38
                },
                "end": {
                    "line": 32,
                    "character": 42
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"qdrant\" for class \"Dict[Unknown, Unknown]\"\n  Attribute \"qdrant\" is unknown",
            "range": {
                "start": {
                    "line": 40,
                    "character": 34
                },
                "end": {
                    "line": 40,
                    "character": 40
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"qdrant\" for class \"Dict[Unknown, Unknown]\"\n  Attribute \"qdrant\" is unknown",
            "range": {
                "start": {
                    "line": 41,
                    "character": 34
                },
                "end": {
                    "line": 41,
                    "character": 40
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"qdrant\" for class \"Dict[Unknown, Unknown]\"\n  Attribute \"qdrant\" is unknown",
            "range": {
                "start": {
                    "line": 42,
                    "character": 37
                },
                "end": {
                    "line": 42,
                    "character": 43
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"qdrant\" for class \"Dict[Unknown, Unknown]\"\n  Attribute \"qdrant\" is unknown",
            "range": {
                "start": {
                    "line": 42,
                    "character": 81
                },
                "end": {
                    "line": 42,
                    "character": 87
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"qdrant\" for class \"Dict[Unknown, Unknown]\"\n  Attribute \"qdrant\" is unknown",
            "range": {
                "start": {
                    "line": 43,
                    "character": 38
                },
                "end": {
                    "line": 43,
                    "character": 44
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"storage\" for class \"Dict[Unknown, Unknown]\"\n  Attribute \"storage\" is unknown",
            "range": {
                "start": {
                    "line": 44,
                    "character": 37
                },
                "end": {
                    "line": 44,
                    "character": 44
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"storage\" for class \"Dict[Unknown, Unknown]\"\n  Attribute \"storage\" is unknown",
            "range": {
                "start": {
                    "line": 44,
                    "character": 61
                },
                "end": {
                    "line": 44,
                    "character": 68
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"storage\" for class \"Dict[Unknown, Unknown]\"\n  Attribute \"storage\" is unknown",
            "range": {
                "start": {
                    "line": 45,
                    "character": 35
                },
                "end": {
                    "line": 45,
                    "character": 42
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"storage\" for class \"Dict[Unknown, Unknown]\"\n  Attribute \"storage\" is unknown",
            "range": {
                "start": {
                    "line": 45,
                    "character": 59
                },
                "end": {
                    "line": 45,
                    "character": 66
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"postgres\" for class \"Dict[Unknown, Unknown]\"\n  Attribute \"postgres\" is unknown",
            "range": {
                "start": {
                    "line": 53,
                    "character": 43
                },
                "end": {
                    "line": 53,
                    "character": 51
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/ingest_pipeline.py",
            "severity": "error",
            "message": "Import \"app.tools\" could not be resolved",
            "range": {
                "start": {
                    "line": 254,
                    "character": 13
                },
                "end": {
                    "line": 254,
                    "character": 22
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/pdf2chunks.py",
            "severity": "error",
            "message": "Import \"pdfplumber\" could not be resolved",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 17
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"Match[str] | None\" cannot be assigned to parameter \"text\" of type \"str\" in function \"_match_hierarchy_element\"\n  Type \"Match[str] | None\" is not assignable to type \"str\"\n    \"Match[str]\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 146,
                    "character": 105
                },
                "end": {
                    "line": 146,
                    "character": 114
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/pdf2chunks.py",
            "severity": "information",
            "message": "Cannot assign to attribute \"current_title\" for class \"HierarchyElement\"\n  Type \"Match[str] | None\" is not assignable to type \"str | None\"\n    Type \"Match[str]\" is not assignable to type \"str | None\"\n      \"Match[str]\" is not assignable to \"str\"\n      \"Match[str]\" is not assignable to \"None\"",
            "range": {
                "start": {
                    "line": 147,
                    "character": 40
                },
                "end": {
                    "line": 147,
                    "character": 49
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"Literal['']\" cannot be assigned to parameter \"next_line\" of type \"Match[str] | None\" in function \"_process_hierarchy_element\"\n  Type \"Literal['']\" is not assignable to type \"Match[str] | None\"\n    \"Literal['']\" is not assignable to \"Match[str]\"\n    \"Literal['']\" is not assignable to \"None\"",
            "range": {
                "start": {
                    "line": 204,
                    "character": 63
                },
                "end": {
                    "line": 204,
                    "character": 65
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/pdf2chunks.py",
            "severity": "error",
            "message": "No overloads for \"update\" match the provided arguments",
            "range": {
                "start": {
                    "line": 225,
                    "character": 12
                },
                "end": {
                    "line": 225,
                    "character": 74
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"dict[str, Dict[Unknown, Unknown]]\" cannot be assigned to parameter \"m\" of type \"Iterable[tuple[str, str]]\" in function \"update\"\n  \"Literal['hierarchy']\" is not assignable to \"tuple[str, str]\"",
            "range": {
                "start": {
                    "line": 225,
                    "character": 29
                },
                "end": {
                    "line": 225,
                    "character": 40
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"Literal['']\" cannot be assigned to parameter \"next_line\" of type \"Match[str] | None\" in function \"_process_hierarchy_element\"\n  Type \"Literal['']\" is not assignable to type \"Match[str] | None\"\n    \"Literal['']\" is not assignable to \"Match[str]\"\n    \"Literal['']\" is not assignable to \"None\"",
            "range": {
                "start": {
                    "line": 233,
                    "character": 69
                },
                "end": {
                    "line": 233,
                    "character": 71
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"str | None\" cannot be assigned to parameter \"title\" of type \"str\" in function \"__init__\"\n  Type \"str | None\" is not assignable to type \"str\"\n    \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 241,
                    "character": 30
                },
                "end": {
                    "line": 241,
                    "character": 70
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"str | None\" cannot be assigned to parameter \"title\" of type \"str\" in function \"__init__\"\n  Type \"str | None\" is not assignable to type \"str\"\n    \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 259,
                    "character": 26
                },
                "end": {
                    "line": 259,
                    "character": 66
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"str\" cannot be assigned to parameter \"next_line\" of type \"Match[str] | None\" in function \"_process_hierarchy_element\"\n  Type \"str\" is not assignable to type \"Match[str] | None\"\n    \"str\" is not assignable to \"Match[str]\"\n    \"str\" is not assignable to \"None\"",
            "range": {
                "start": {
                    "line": 320,
                    "character": 48
                },
                "end": {
                    "line": 320,
                    "character": 98
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/pdf2chunks.py",
            "severity": "error",
            "message": "Type \"LiteralString | None\" is not assignable to return type \"str\"\n  Type \"LiteralString | None\" is not assignable to type \"str\"\n    \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 341,
                    "character": 15
                },
                "end": {
                    "line": 341,
                    "character": 61
                }
            },
            "rule": "reportReturnType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"str | None\" cannot be assigned to parameter \"obj\" of type \"Sized\" in function \"len\"\n  Type \"str | None\" is not assignable to type \"Sized\"\n    \"None\" is incompatible with protocol \"Sized\"\n      \"__len__\" is not present",
            "range": {
                "start": {
                    "line": 396,
                    "character": 19
                },
                "end": {
                    "line": 396,
                    "character": 34
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/pdf2chunks.py",
            "severity": "error",
            "message": "Operator \"+\" not supported for types \"str\" and \"str | None\"\n  Operator \"+\" not supported for types \"str\" and \"None\"",
            "range": {
                "start": {
                    "line": 399,
                    "character": 28
                },
                "end": {
                    "line": 399,
                    "character": 60
                }
            },
            "rule": "reportOperatorIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/pdf2chunks.py",
            "severity": "error",
            "message": "Argument of type \"str | None\" cannot be assigned to parameter \"text\" of type \"str\" in function \"_split_article\"\n  Type \"str | None\" is not assignable to type \"str\"\n    \"None\" is not assignable to \"str\"",
            "range": {
                "start": {
                    "line": 410,
                    "character": 49
                },
                "end": {
                    "line": 410,
                    "character": 64
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/pdf2chunks.py",
            "severity": "error",
            "message": "Object of type \"None\" is not subscriptable",
            "range": {
                "start": {
                    "line": 549,
                    "character": 36
                },
                "end": {
                    "line": 549,
                    "character": 51
                }
            },
            "rule": "reportOptionalSubscript"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn.py",
            "severity": "error",
            "message": "Import \"fitz\" could not be resolved",
            "range": {
                "start": {
                    "line": 23,
                    "character": 7
                },
                "end": {
                    "line": 23,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn.py",
            "severity": "error",
            "message": "Import \"spacy\" could not be resolved",
            "range": {
                "start": {
                    "line": 24,
                    "character": 7
                },
                "end": {
                    "line": 24,
                    "character": 12
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn.py",
            "severity": "error",
            "message": "Import \"spacy.pipeline\" could not be resolved",
            "range": {
                "start": {
                    "line": 25,
                    "character": 5
                },
                "end": {
                    "line": 25,
                    "character": 19
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn.py",
            "severity": "warning",
            "message": "Import \"dateparser\" could not be resolved from source",
            "range": {
                "start": {
                    "line": 26,
                    "character": 7
                },
                "end": {
                    "line": 26,
                    "character": 17
                }
            },
            "rule": "reportMissingModuleSource"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn.py",
            "severity": "error",
            "message": "Function with declared return type \"List[Dict[str, Any]]\" must return value on all code paths\n  \"None\" is not assignable to \"List[Dict[str, Any]]\"",
            "range": {
                "start": {
                    "line": 221,
                    "character": 45
                },
                "end": {
                    "line": 221,
                    "character": 65
                }
            },
            "rule": "reportReturnType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"fitz\" could not be resolved",
            "range": {
                "start": {
                    "line": 16,
                    "character": 7
                },
                "end": {
                    "line": 16,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"langchain_openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 17,
                    "character": 5
                },
                "end": {
                    "line": 17,
                    "character": 21
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"langchain.prompts\" could not be resolved",
            "range": {
                "start": {
                    "line": 18,
                    "character": 5
                },
                "end": {
                    "line": 18,
                    "character": 22
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"langchain.schema\" could not be resolved",
            "range": {
                "start": {
                    "line": 19,
                    "character": 5
                },
                "end": {
                    "line": 19,
                    "character": 21
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"langchain.output_parsers\" could not be resolved",
            "range": {
                "start": {
                    "line": 20,
                    "character": 5
                },
                "end": {
                    "line": 20,
                    "character": 29
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"pydantic\" could not be resolved",
            "range": {
                "start": {
                    "line": 21,
                    "character": 5
                },
                "end": {
                    "line": 21,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 22,
                    "character": 5
                },
                "end": {
                    "line": 22,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "warning",
            "message": "Import \"dateparser\" could not be resolved from source",
            "range": {
                "start": {
                    "line": 24,
                    "character": 7
                },
                "end": {
                    "line": 24,
                    "character": 17
                }
            },
            "rule": "reportMissingModuleSource"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 26,
                    "character": 5
                },
                "end": {
                    "line": 26,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Import \"openai.types.responses\" could not be resolved",
            "range": {
                "start": {
                    "line": 28,
                    "character": 5
                },
                "end": {
                    "line": 28,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "\"response\" is unbound",
            "range": {
                "start": {
                    "line": 160,
                    "character": 34
                },
                "end": {
                    "line": 160,
                    "character": 42
                }
            },
            "rule": "reportUnboundVariable"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Type \"CoroutineType[Any, Any, Ruling]\" is not assignable to return type \"ParsedRuling | bytes\"\n  Type \"CoroutineType[Any, Any, Ruling]\" is not assignable to type \"ParsedRuling | bytes\"\n    \"CoroutineType[Any, Any, Ruling]\" is not assignable to \"ParsedRuling\"\n    \"CoroutineType[Any, Any, Ruling]\" is not assignable to \"bytes\"",
            "range": {
                "start": {
                    "line": 162,
                    "character": 15
                },
                "end": {
                    "line": 162,
                    "character": 40
                }
            },
            "rule": "reportReturnType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "\"batch\" is not defined",
            "range": {
                "start": {
                    "line": 301,
                    "character": 12
                },
                "end": {
                    "line": 301,
                    "character": 17
                }
            },
            "rule": "reportUndefinedVariable"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "\"i\" is unbound",
            "range": {
                "start": {
                    "line": 303,
                    "character": 65
                },
                "end": {
                    "line": 303,
                    "character": 66
                }
            },
            "rule": "reportUnboundVariable"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "\"batch\" is not defined",
            "range": {
                "start": {
                    "line": 304,
                    "character": 24
                },
                "end": {
                    "line": 304,
                    "character": 29
                }
            },
            "rule": "reportUndefinedVariable"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "information",
            "message": "Cannot access attribute \"paragraphs\" for class \"bytes\"\n  Attribute \"paragraphs\" is unknown",
            "range": {
                "start": {
                    "line": 416,
                    "character": 115
                },
                "end": {
                    "line": 416,
                    "character": 125
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Argument missing for parameter \"index\"",
            "range": {
                "start": {
                    "line": 421,
                    "character": 23
                },
                "end": {
                    "line": 421,
                    "character": 55
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "No overloads for \"open\" match the provided arguments",
            "range": {
                "start": {
                    "line": 494,
                    "character": 13
                },
                "end": {
                    "line": 494,
                    "character": 57
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Argument of type \"Path | None\" cannot be assigned to parameter \"file\" of type \"FileDescriptorOrPath\" in function \"open\"\n  Type \"Path | None\" is not assignable to type \"FileDescriptorOrPath\"\n    Type \"None\" is not assignable to type \"FileDescriptorOrPath\"\n      \"None\" is not assignable to \"int\"\n      \"None\" is not assignable to \"str\"\n      \"None\" is not assignable to \"bytes\"\n      \"None\" is incompatible with protocol \"PathLike[str]\"\n        \"__fspath__\" is not present\n      \"None\" is incompatible with protocol \"PathLike[bytes]\"\n  ...",
            "range": {
                "start": {
                    "line": 494,
                    "character": 18
                },
                "end": {
                    "line": 494,
                    "character": 33
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "No overloads for \"open\" match the provided arguments",
            "range": {
                "start": {
                    "line": 520,
                    "character": 13
                },
                "end": {
                    "line": 520,
                    "character": 57
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Argument of type \"Path | None\" cannot be assigned to parameter \"file\" of type \"FileDescriptorOrPath\" in function \"open\"\n  Type \"Path | None\" is not assignable to type \"FileDescriptorOrPath\"\n    Type \"None\" is not assignable to type \"FileDescriptorOrPath\"\n      \"None\" is not assignable to \"int\"\n      \"None\" is not assignable to \"str\"\n      \"None\" is not assignable to \"bytes\"\n      \"None\" is incompatible with protocol \"PathLike[str]\"\n        \"__fspath__\" is not present\n      \"None\" is incompatible with protocol \"PathLike[bytes]\"\n  ...",
            "range": {
                "start": {
                    "line": 520,
                    "character": 18
                },
                "end": {
                    "line": 520,
                    "character": 33
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "\"paragraphs\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 565,
                    "character": 43
                },
                "end": {
                    "line": 565,
                    "character": 53
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "\"meta\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 579,
                    "character": 19
                },
                "end": {
                    "line": 579,
                    "character": 23
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/preprocess_sn_o3.py",
            "severity": "error",
            "message": "Argument of type \"list[List[Dict[str, Any]] | None]\" cannot be assigned to parameter \"records\" of type \"List[Dict[str, Any]]\" in function \"validate_output\"\n  \"list[List[Dict[str, Any]] | None]\" is not assignable to \"List[Dict[str, Any]]\"\n    Type parameter \"_T@list\" is invariant, but \"List[Dict[str, Any]] | None\" is not the same as \"Dict[str, Any]\"\n    Consider switching from \"list\" to \"Sequence\" which is covariant",
            "range": {
                "start": {
                    "line": 719,
                    "character": 65
                },
                "end": {
                    "line": 719,
                    "character": 72
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/refactored_ingest_pipeline.py",
            "severity": "error",
            "message": "Argument missing for parameter \"config_service\"",
            "range": {
                "start": {
                    "line": 33,
                    "character": 26
                },
                "end": {
                    "line": 33,
                    "character": 43
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/refactored_ingest_pipeline.py",
            "severity": "error",
            "message": "Expected class but received \"(iterable: Iterable[object], /) -> bool\"",
            "range": {
                "start": {
                    "line": 60,
                    "character": 46
                },
                "end": {
                    "line": 60,
                    "character": 49
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/refactored_ingest_pipeline.py",
            "severity": "error",
            "message": "Expected class but received \"(iterable: Iterable[object], /) -> bool\"",
            "range": {
                "start": {
                    "line": 88,
                    "character": 77
                },
                "end": {
                    "line": 88,
                    "character": 80
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/refactored_ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"statute_service\" for class \"RefactoredIngestOrchestrator*\"\n  Attribute \"statute_service\" is unknown",
            "range": {
                "start": {
                    "line": 96,
                    "character": 29
                },
                "end": {
                    "line": 96,
                    "character": 44
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/refactored_ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"statute_service\" for class \"RefactoredIngestOrchestrator*\"\n  Attribute \"statute_service\" is unknown",
            "range": {
                "start": {
                    "line": 106,
                    "character": 40
                },
                "end": {
                    "line": 106,
                    "character": 55
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/refactored_ingest_pipeline.py",
            "severity": "error",
            "message": "Expected class but received \"(iterable: Iterable[object], /) -> bool\"",
            "range": {
                "start": {
                    "line": 126,
                    "character": 96
                },
                "end": {
                    "line": 126,
                    "character": 99
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/refactored_ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"court_service\" for class \"RefactoredIngestOrchestrator*\"\n  Attribute \"court_service\" is unknown",
            "range": {
                "start": {
                    "line": 133,
                    "character": 28
                },
                "end": {
                    "line": 133,
                    "character": 41
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/refactored_ingest_pipeline.py",
            "severity": "error",
            "message": "Expected class but received \"(iterable: Iterable[object], /) -> bool\"",
            "range": {
                "start": {
                    "line": 140,
                    "character": 89
                },
                "end": {
                    "line": 140,
                    "character": 92
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/refactored_ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"embedding_service\" for class \"RefactoredIngestOrchestrator*\"\n  Attribute \"embedding_service\" is unknown",
            "range": {
                "start": {
                    "line": 154,
                    "character": 35
                },
                "end": {
                    "line": 154,
                    "character": 52
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/refactored_ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"embedding_service\" for class \"RefactoredIngestOrchestrator*\"\n  Attribute \"embedding_service\" is unknown",
            "range": {
                "start": {
                    "line": 170,
                    "character": 40
                },
                "end": {
                    "line": 170,
                    "character": 57
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/refactored_ingest_pipeline.py",
            "severity": "error",
            "message": "Expected class but received \"(iterable: Iterable[object], /) -> bool\"",
            "range": {
                "start": {
                    "line": 188,
                    "character": 87
                },
                "end": {
                    "line": 188,
                    "character": 90
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/refactored_ingest_pipeline.py",
            "severity": "error",
            "message": "Expected class but received \"(iterable: Iterable[object], /) -> bool\"",
            "range": {
                "start": {
                    "line": 232,
                    "character": 52
                },
                "end": {
                    "line": 232,
                    "character": 55
                }
            },
            "rule": "reportGeneralTypeIssues"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/refactored_ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"statute_service\" for class \"RefactoredIngestOrchestrator*\"\n  Attribute \"statute_service\" is unknown",
            "range": {
                "start": {
                    "line": 240,
                    "character": 36
                },
                "end": {
                    "line": 240,
                    "character": 51
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/refactored_ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"court_service\" for class \"RefactoredIngestOrchestrator*\"\n  Attribute \"court_service\" is unknown",
            "range": {
                "start": {
                    "line": 241,
                    "character": 34
                },
                "end": {
                    "line": 241,
                    "character": 47
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/refactored_ingest_pipeline.py",
            "severity": "information",
            "message": "Cannot access attribute \"embedding_service\" for class \"RefactoredIngestOrchestrator*\"\n  Attribute \"embedding_service\" is unknown",
            "range": {
                "start": {
                    "line": 242,
                    "character": 37
                },
                "end": {
                    "line": 242,
                    "character": 54
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/sn.py",
            "severity": "error",
            "message": "Import \"deepdiff\" could not be resolved",
            "range": {
                "start": {
                    "line": 7,
                    "character": 5
                },
                "end": {
                    "line": 7,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/sn.py",
            "severity": "warning",
            "message": "Import \"dateparser\" could not be resolved from source",
            "range": {
                "start": {
                    "line": 9,
                    "character": 7
                },
                "end": {
                    "line": 9,
                    "character": 17
                }
            },
            "rule": "reportMissingModuleSource"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/sn.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 7
                },
                "end": {
                    "line": 10,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/sn.py",
            "severity": "error",
            "message": "Import \"dotenv\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 5
                },
                "end": {
                    "line": 11,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/sn.py",
            "severity": "error",
            "message": "Import \"qdrant_client\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 5
                },
                "end": {
                    "line": 12,
                    "character": 18
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/sn.py",
            "severity": "error",
            "message": "Import \"sentence_transformers\" could not be resolved",
            "range": {
                "start": {
                    "line": 13,
                    "character": 5
                },
                "end": {
                    "line": 13,
                    "character": 26
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/sn.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 14,
                    "character": 5
                },
                "end": {
                    "line": 14,
                    "character": 15
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/sn.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.ext.asyncio\" could not be resolved",
            "range": {
                "start": {
                    "line": 15,
                    "character": 5
                },
                "end": {
                    "line": 15,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/sn.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.orm\" could not be resolved",
            "range": {
                "start": {
                    "line": 16,
                    "character": 5
                },
                "end": {
                    "line": 16,
                    "character": 19
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/sn.py",
            "severity": "error",
            "message": "\"strftime\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 115,
                    "character": 87
                },
                "end": {
                    "line": 115,
                    "character": 95
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/templates.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 7
                },
                "end": {
                    "line": 9,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/templates.py",
            "severity": "error",
            "message": "Import \"dotenv\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 5
                },
                "end": {
                    "line": 10,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/templates.py",
            "severity": "error",
            "message": "Import \"qdrant_client\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 5
                },
                "end": {
                    "line": 11,
                    "character": 18
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/templates.py",
            "severity": "error",
            "message": "Import \"sentence_transformers\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 5
                },
                "end": {
                    "line": 12,
                    "character": 26
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/templates.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 13,
                    "character": 5
                },
                "end": {
                    "line": 13,
                    "character": 15
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/templates.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.ext.asyncio\" could not be resolved",
            "range": {
                "start": {
                    "line": 14,
                    "character": 5
                },
                "end": {
                    "line": 14,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/templates.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.orm\" could not be resolved",
            "range": {
                "start": {
                    "line": 15,
                    "character": 5
                },
                "end": {
                    "line": 15,
                    "character": 19
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/templates_preprocess.py",
            "severity": "error",
            "message": "Import \"fitz\" could not be resolved",
            "range": {
                "start": {
                    "line": 0,
                    "character": 7
                },
                "end": {
                    "line": 0,
                    "character": 11
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/templates_preprocess.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 2,
                    "character": 7
                },
                "end": {
                    "line": 2,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/templates_preprocess.py",
            "severity": "error",
            "message": "Import \"pydantic\" could not be resolved",
            "range": {
                "start": {
                    "line": 10,
                    "character": 5
                },
                "end": {
                    "line": 10,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/templates_preprocess.py",
            "severity": "error",
            "message": "Argument of type \"partial[CoroutineType[Any, Any, Unknown | None]]\" cannot be assigned to parameter \"object\" of type \"() -> Coroutine[Any, Any, Template]\" in function \"append\"\n  Type \"partial[CoroutineType[Any, Any, Unknown | None]]\" is not assignable to type \"() -> Coroutine[Any, Any, Template]\"\n    Function return type \"CoroutineType[Any, Any, Unknown | None]\" is incompatible with type \"Coroutine[Any, Any, Template]\"\n      \"CoroutineType[Any, Any, Unknown | None]\" is not assignable to \"Coroutine[Any, Any, Template]\"\n        Type parameter \"_ReturnT_nd_co@Coroutine\" is covariant, but \"Unknown | None\" is not a subtype of \"Template\"\n          Type \"Unknown | None\" is not assignable to type \"Template\"",
            "range": {
                "start": {
                    "line": 85,
                    "character": 34
                },
                "end": {
                    "line": 85,
                    "character": 73
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/test_hierarchy.py",
            "severity": "error",
            "message": "Object of type \"None\" is not subscriptable",
            "range": {
                "start": {
                    "line": 117,
                    "character": 26
                },
                "end": {
                    "line": 117,
                    "character": 41
                }
            },
            "rule": "reportOptionalSubscript"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/test_hierarchy.py",
            "severity": "error",
            "message": "Object of type \"None\" is not subscriptable",
            "range": {
                "start": {
                    "line": 142,
                    "character": 26
                },
                "end": {
                    "line": 142,
                    "character": 41
                }
            },
            "rule": "reportOptionalSubscript"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/ingest/test_preprocess_o3.py",
            "severity": "error",
            "message": "No parameter named \"max_workers\"",
            "range": {
                "start": {
                    "line": 67,
                    "character": 49
                },
                "end": {
                    "line": 67,
                    "character": 60
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/init_database.py",
            "severity": "error",
            "message": "Import \"sqlmodel\" could not be resolved",
            "range": {
                "start": {
                    "line": 14,
                    "character": 5
                },
                "end": {
                    "line": 14,
                    "character": 13
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/init_database.py",
            "severity": "information",
            "message": "Cannot access attribute \"startup\" for class \"DatabaseManager\"\n  Attribute \"startup\" is unknown",
            "range": {
                "start": {
                    "line": 36,
                    "character": 25
                },
                "end": {
                    "line": 36,
                    "character": 32
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/init_database.py",
            "severity": "information",
            "message": "Cannot access attribute \"engine\" for class \"DatabaseManager\"\n  Attribute \"engine\" is unknown",
            "range": {
                "start": {
                    "line": 41,
                    "character": 30
                },
                "end": {
                    "line": 41,
                    "character": 36
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/init_database.py",
            "severity": "information",
            "message": "Cannot access attribute \"engine\" for class \"DatabaseManager\"\n  Attribute \"engine\" is unknown",
            "range": {
                "start": {
                    "line": 47,
                    "character": 30
                },
                "end": {
                    "line": 47,
                    "character": 36
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/init_database.py",
            "severity": "information",
            "message": "Cannot access attribute \"startup\" for class \"DatabaseManager\"\n  Attribute \"startup\" is unknown",
            "range": {
                "start": {
                    "line": 73,
                    "character": 25
                },
                "end": {
                    "line": 73,
                    "character": 32
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/init_database.py",
            "severity": "information",
            "message": "Cannot access attribute \"engine\" for class \"DatabaseManager\"\n  Attribute \"engine\" is unknown",
            "range": {
                "start": {
                    "line": 75,
                    "character": 30
                },
                "end": {
                    "line": 75,
                    "character": 36
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/schema_cmp.py",
            "severity": "warning",
            "message": "Import \"psycopg2\" could not be resolved from source",
            "range": {
                "start": {
                    "line": 22,
                    "character": 7
                },
                "end": {
                    "line": 22,
                    "character": 15
                }
            },
            "rule": "reportMissingModuleSource"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/test_celery_refactor.py",
            "severity": "error",
            "message": "Import \"celery\" could not be resolved",
            "range": {
                "start": {
                    "line": 94,
                    "character": 9
                },
                "end": {
                    "line": 94,
                    "character": 15
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/celery/conftest.py",
            "severity": "information",
            "message": "\"Celery\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 2,
                    "character": 23
                },
                "end": {
                    "line": 2,
                    "character": 29
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/celery/test_celery_integration.py",
            "severity": "error",
            "message": "Import \"celery.result\" could not be resolved",
            "range": {
                "start": {
                    "line": 23,
                    "character": 5
                },
                "end": {
                    "line": 23,
                    "character": 18
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/conftest.py",
            "severity": "error",
            "message": "Import \"qdrant_client\" could not be resolved",
            "range": {
                "start": {
                    "line": 74,
                    "character": 9
                },
                "end": {
                    "line": 74,
                    "character": 22
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/conftest.py",
            "severity": "error",
            "message": "Import \"asyncpg\" could not be resolved",
            "range": {
                "start": {
                    "line": 6,
                    "character": 11
                },
                "end": {
                    "line": 6,
                    "character": 18
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/conftest.py",
            "severity": "error",
            "message": "Import \"qdrant_client\" could not be resolved",
            "range": {
                "start": {
                    "line": 7,
                    "character": 9
                },
                "end": {
                    "line": 7,
                    "character": 22
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/conftest.py",
            "severity": "error",
            "message": "Import \"qdrant_client.models\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 9
                },
                "end": {
                    "line": 8,
                    "character": 29
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/conftest.py",
            "severity": "error",
            "message": "Import \"redis.asyncio\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 11
                },
                "end": {
                    "line": 9,
                    "character": 24
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/conftest.py",
            "severity": "error",
            "message": "Import \"app.core.config\" could not be resolved",
            "range": {
                "start": {
                    "line": 11,
                    "character": 9
                },
                "end": {
                    "line": 11,
                    "character": 24
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/conftest.py",
            "severity": "error",
            "message": "Import \"app.core.database\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 9
                },
                "end": {
                    "line": 12,
                    "character": 26
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/conftest.py",
            "severity": "error",
            "message": "Import \"app.services.embedding\" could not be resolved",
            "range": {
                "start": {
                    "line": 13,
                    "character": 9
                },
                "end": {
                    "line": 13,
                    "character": 31
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/conftest.py",
            "severity": "error",
            "message": "Import \"dotenv\" could not be resolved",
            "range": {
                "start": {
                    "line": 31,
                    "character": 13
                },
                "end": {
                    "line": 31,
                    "character": 19
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_api.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 19,
                    "character": 5
                },
                "end": {
                    "line": 19,
                    "character": 15
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_api.py",
            "severity": "information",
            "message": "\"AsyncSessionLocal\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 20,
                    "character": 25
                },
                "end": {
                    "line": 20,
                    "character": 42
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_api.py",
            "severity": "information",
            "message": "\"init_db\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 20,
                    "character": 44
                },
                "end": {
                    "line": 20,
                    "character": 51
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_api.py",
            "severity": "error",
            "message": "Operator \">=\" not supported for \"None\"",
            "range": {
                "start": {
                    "line": 176,
                    "character": 53
                },
                "end": {
                    "line": 176,
                    "character": 68
                }
            },
            "rule": "reportOptionalOperand"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_conversation_manager.py",
            "severity": "error",
            "message": "Import \"redis.asyncio\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 7
                },
                "end": {
                    "line": 8,
                    "character": 20
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_conversation_manager.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 5
                },
                "end": {
                    "line": 9,
                    "character": 15
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_conversation_manager.py",
            "severity": "error",
            "message": "Argument missing for parameter \"config_service\"",
            "range": {
                "start": {
                    "line": 38,
                    "character": 18
                },
                "end": {
                    "line": 38,
                    "character": 54
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_database_manager.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.ext.asyncio\" could not be resolved",
            "range": {
                "start": {
                    "line": 7,
                    "character": 5
                },
                "end": {
                    "line": 7,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_database_manager.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.exc\" could not be resolved",
            "range": {
                "start": {
                    "line": 8,
                    "character": 5
                },
                "end": {
                    "line": 8,
                    "character": 19
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_database_manager.py",
            "severity": "error",
            "message": "Import \"sqlalchemy.pool\" could not be resolved",
            "range": {
                "start": {
                    "line": 9,
                    "character": 5
                },
                "end": {
                    "line": 9,
                    "character": 20
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_database_manager.py",
            "severity": "error",
            "message": "Argument missing for parameter \"config_service\"",
            "range": {
                "start": {
                    "line": 31,
                    "character": 18
                },
                "end": {
                    "line": 31,
                    "character": 35
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_database_manager.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 63,
                    "character": 17
                },
                "end": {
                    "line": 63,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_database_manager.py",
            "severity": "error",
            "message": "Argument missing for parameter \"config_service\"",
            "range": {
                "start": {
                    "line": 105,
                    "character": 26
                },
                "end": {
                    "line": 105,
                    "character": 43
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_database_manager.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 163,
                    "character": 17
                },
                "end": {
                    "line": 163,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_database_manager.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 233,
                    "character": 17
                },
                "end": {
                    "line": 233,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_database_manager.py",
            "severity": "error",
            "message": "Import \"sqlalchemy\" could not be resolved",
            "range": {
                "start": {
                    "line": 368,
                    "character": 21
                },
                "end": {
                    "line": 368,
                    "character": 31
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration.py",
            "severity": "information",
            "message": "\"initialize_services\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 13,
                    "character": 4
                },
                "end": {
                    "line": 13,
                    "character": 23
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration.py",
            "severity": "error",
            "message": "Import \"app.orchestrator_refactored\" could not be resolved",
            "range": {
                "start": {
                    "line": 20,
                    "character": 5
                },
                "end": {
                    "line": 20,
                    "character": 32
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration.py",
            "severity": "error",
            "message": "Import \"openai.types.responses\" could not be resolved",
            "range": {
                "start": {
                    "line": 23,
                    "character": 5
                },
                "end": {
                    "line": 23,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration.py",
            "severity": "error",
            "message": "Argument missing for parameter \"config_service\"",
            "range": {
                "start": {
                    "line": 278,
                    "character": 19
                },
                "end": {
                    "line": 278,
                    "character": 33
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration.py",
            "severity": "error",
            "message": "Argument of type \"list[Mock]\" cannot be assigned to parameter \"stream\" of type \"AsyncIterator[Unknown]\" in function \"process_stream\"\n  \"list[Mock]\" is incompatible with protocol \"AsyncIterator[Unknown]\"\n    \"__anext__\" is not present\n    \"__aiter__\" is not present",
            "range": {
                "start": {
                    "line": 355,
                    "character": 50
                },
                "end": {
                    "line": 355,
                    "character": 56
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration.py",
            "severity": "error",
            "message": "Argument missing for parameter \"config_service\"",
            "range": {
                "start": {
                    "line": 375,
                    "character": 23
                },
                "end": {
                    "line": 375,
                    "character": 54
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration.py",
            "severity": "error",
            "message": "\"get\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 379,
                    "character": 35
                },
                "end": {
                    "line": 379,
                    "character": 38
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration.py",
            "severity": "error",
            "message": "\"setex\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 380,
                    "character": 35
                },
                "end": {
                    "line": 380,
                    "character": 40
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration.py",
            "severity": "error",
            "message": "\"setex\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 402,
                    "character": 42
                },
                "end": {
                    "line": 402,
                    "character": 47
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration.py",
            "severity": "error",
            "message": "\"get\" is not a known attribute of \"None\"",
            "range": {
                "start": {
                    "line": 406,
                    "character": 35
                },
                "end": {
                    "line": 406,
                    "character": 38
                }
            },
            "rule": "reportOptionalMemberAccess"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration.py",
            "severity": "information",
            "message": "\"cached_query\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 459,
                    "character": 47
                },
                "end": {
                    "line": 459,
                    "character": 59
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration.py",
            "severity": "error",
            "message": "Import \"openai\" could not be resolved",
            "range": {
                "start": {
                    "line": 527,
                    "character": 17
                },
                "end": {
                    "line": 527,
                    "character": 23
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration.py",
            "severity": "error",
            "message": "Argument of type \"int\" cannot be assigned to parameter \"obj\" of type \"Sized\" in function \"len\"\n  \"int\" is incompatible with protocol \"Sized\"\n    \"__len__\" is not present",
            "range": {
                "start": {
                    "line": 597,
                    "character": 27
                },
                "end": {
                    "line": 597,
                    "character": 33
                }
            },
            "rule": "reportArgumentType"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration_refactored.py",
            "severity": "information",
            "message": "\"setup_structured_logging\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 15,
                    "character": 36
                },
                "end": {
                    "line": 15,
                    "character": 60
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration_refactored.py",
            "severity": "information",
            "message": "\"initialize_services\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 16,
                    "character": 25
                },
                "end": {
                    "line": 16,
                    "character": 44
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration_refactored.py",
            "severity": "error",
            "message": "Import \"app.orchestrator_refactored\" could not be resolved",
            "range": {
                "start": {
                    "line": 17,
                    "character": 5
                },
                "end": {
                    "line": 17,
                    "character": 32
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration_refactored.py",
            "severity": "information",
            "message": "\"get\" is not a known attribute of module \"app.core.service_container\"",
            "range": {
                "start": {
                    "line": 204,
                    "character": 41
                },
                "end": {
                    "line": 204,
                    "character": 44
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_integration_refactored.py",
            "severity": "information",
            "message": "\"get\" is not a known attribute of module \"app.core.service_container\"",
            "range": {
                "start": {
                    "line": 261,
                    "character": 46
                },
                "end": {
                    "line": 261,
                    "character": 49
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_refactored_services.py",
            "severity": "error",
            "message": "Argument missing for parameter \"config_service\"",
            "range": {
                "start": {
                    "line": 70,
                    "character": 22
                },
                "end": {
                    "line": 70,
                    "character": 44
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_refactored_services.py",
            "severity": "information",
            "message": "Cannot assign to attribute \"_llm\" for class \"StatuteSearchService\"\n  Attribute \"_llm\" is unknown",
            "range": {
                "start": {
                    "line": 75,
                    "character": 20
                },
                "end": {
                    "line": 75,
                    "character": 24
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_refactored_services.py",
            "severity": "information",
            "message": "Cannot assign to attribute \"_llm\" for class \"DocumentGenerationService\"\n  Attribute \"_llm\" is unknown",
            "range": {
                "start": {
                    "line": 162,
                    "character": 20
                },
                "end": {
                    "line": 162,
                    "character": 24
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_refactored_services.py",
            "severity": "error",
            "message": "Argument missing for parameter \"config_service\"",
            "range": {
                "start": {
                    "line": 313,
                    "character": 12
                },
                "end": {
                    "line": 313,
                    "character": 34
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_refactored_services.py",
            "severity": "error",
            "message": "Argument missing for parameter \"config_service\"",
            "range": {
                "start": {
                    "line": 351,
                    "character": 22
                },
                "end": {
                    "line": 351,
                    "character": 44
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming.py",
            "severity": "information",
            "message": "\"ParalegalAgent\" is unknown import symbol",
            "range": {
                "start": {
                    "line": 15,
                    "character": 29
                },
                "end": {
                    "line": 15,
                    "character": 43
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "error",
            "message": "Import \"openai.types.responses\" could not be resolved",
            "range": {
                "start": {
                    "line": 12,
                    "character": 5
                },
                "end": {
                    "line": 12,
                    "character": 27
                }
            },
            "rule": "reportMissingImports"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "information",
            "message": "Cannot assign to attribute \"transform\" for class \"MockStreamProcessor\"\n  Expression of type \"(event: StreamEvent) -> StreamEvent\" cannot be assigned to attribute \"transform\" of class \"MockStreamProcessor\"\n    \"FunctionType\" is not assignable to \"None\"",
            "range": {
                "start": {
                    "line": 318,
                    "character": 18
                },
                "end": {
                    "line": 318,
                    "character": 27
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "information",
            "message": "Cannot access attribute \"chunks_received\" for class \"MetricsCollector\"\n  Attribute \"chunks_received\" is unknown",
            "range": {
                "start": {
                    "line": 377,
                    "character": 25
                },
                "end": {
                    "line": 377,
                    "character": 40
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "information",
            "message": "Cannot access attribute \"events_by_type\" for class \"MetricsCollector\"\n  Attribute \"events_by_type\" is unknown",
            "range": {
                "start": {
                    "line": 378,
                    "character": 25
                },
                "end": {
                    "line": 378,
                    "character": 39
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "information",
            "message": "Cannot access attribute \"text_deltas\" for class \"MetricsCollector\"\n  Attribute \"text_deltas\" is unknown",
            "range": {
                "start": {
                    "line": 379,
                    "character": 25
                },
                "end": {
                    "line": 379,
                    "character": 36
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "information",
            "message": "Cannot access attribute \"tool_calls\" for class \"MetricsCollector\"\n  Attribute \"tool_calls\" is unknown",
            "range": {
                "start": {
                    "line": 380,
                    "character": 25
                },
                "end": {
                    "line": 380,
                    "character": 35
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "information",
            "message": "Cannot access attribute \"errors\" for class \"MetricsCollector\"\n  Attribute \"errors\" is unknown",
            "range": {
                "start": {
                    "line": 381,
                    "character": 25
                },
                "end": {
                    "line": 381,
                    "character": 31
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "information",
            "message": "Cannot access attribute \"start_time\" for class \"MetricsCollector\"\n  Attribute \"start_time\" is unknown",
            "range": {
                "start": {
                    "line": 382,
                    "character": 25
                },
                "end": {
                    "line": 382,
                    "character": 35
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "information",
            "message": "Cannot assign to attribute \"chunks_received\" for class \"MetricsCollector\"\n  Attribute \"chunks_received\" is unknown",
            "range": {
                "start": {
                    "line": 401,
                    "character": 18
                },
                "end": {
                    "line": 401,
                    "character": 33
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "information",
            "message": "Cannot assign to attribute \"chunks_received\" for class \"MetricsCollector\"\n  Attribute \"chunks_received\" is unknown",
            "range": {
                "start": {
                    "line": 418,
                    "character": 18
                },
                "end": {
                    "line": 418,
                    "character": 33
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "information",
            "message": "Cannot assign to attribute \"text_deltas\" for class \"MetricsCollector\"\n  Attribute \"text_deltas\" is unknown",
            "range": {
                "start": {
                    "line": 419,
                    "character": 18
                },
                "end": {
                    "line": 419,
                    "character": 29
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "information",
            "message": "Cannot assign to attribute \"errors\" for class \"MetricsCollector\"\n  Attribute \"errors\" is unknown",
            "range": {
                "start": {
                    "line": 420,
                    "character": 18
                },
                "end": {
                    "line": 420,
                    "character": 24
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "information",
            "message": "Cannot access attribute \"chunks_received\" for class \"MetricsCollector\"\n  Attribute \"chunks_received\" is unknown",
            "range": {
                "start": {
                    "line": 424,
                    "character": 25
                },
                "end": {
                    "line": 424,
                    "character": 40
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "information",
            "message": "Cannot access attribute \"text_deltas\" for class \"MetricsCollector\"\n  Attribute \"text_deltas\" is unknown",
            "range": {
                "start": {
                    "line": 425,
                    "character": 25
                },
                "end": {
                    "line": 425,
                    "character": 36
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "information",
            "message": "Cannot access attribute \"errors\" for class \"MetricsCollector\"\n  Attribute \"errors\" is unknown",
            "range": {
                "start": {
                    "line": 426,
                    "character": 25
                },
                "end": {
                    "line": 426,
                    "character": 31
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/integration/test_streaming_handler.py",
            "severity": "information",
            "message": "Cannot access attribute \"events_by_type\" for class \"MetricsCollector\"\n  Attribute \"events_by_type\" is unknown",
            "range": {
                "start": {
                    "line": 427,
                    "character": 25
                },
                "end": {
                    "line": 427,
                    "character": 39
                }
            },
            "rule": "reportAttributeAccessIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/unit/test_agent_sdk.py",
            "severity": "error",
            "message": "Arguments missing for parameters \"config_service\", \"conversation_manager\", \"tool_executor\"",
            "range": {
                "start": {
                    "line": 22,
                    "character": 12
                },
                "end": {
                    "line": 22,
                    "character": 31
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/unit/test_agent_sdk.py",
            "severity": "error",
            "message": "Arguments missing for parameters \"config_service\", \"conversation_manager\", \"tool_executor\"",
            "range": {
                "start": {
                    "line": 92,
                    "character": 12
                },
                "end": {
                    "line": 92,
                    "character": 31
                }
            },
            "rule": "reportCallIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/unit/test_registration_key.py",
            "severity": "error",
            "message": "\"__getitem__\" method not defined on type \"Literal[False]\"",
            "range": {
                "start": {
                    "line": 172,
                    "character": 66
                },
                "end": {
                    "line": 172,
                    "character": 75
                }
            },
            "rule": "reportIndexIssue"
        },
        {
            "file": "/Volumes/code/cywil/ai-paralegal-poc/tests/unit/test_tool_executor.py",
            "severity": "error",
            "message": "Argument missing for parameter \"config_service\"",
            "range": {
                "start": {
                    "line": 30,
                    "character": 19
                },
                "end": {
                    "line": 30,
                    "character": 33
                }
            },
            "rule": "reportCallIssue"
        }
    ],
    "summary": {
        "filesAnalyzed": 103,
        "errorCount": 424,
        "warningCount": 12,
        "informationCount": 89,
        "timeInSec": 2.007
    }
}

